<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Full Trust on Le blog de baywet</title><link>https://baywet.github.io/fr/tags/full-trust/</link><description>Recent content in Full Trust on Le blog de baywet</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 19 Feb 2024 17:03:44 -0500</lastBuildDate><atom:link href="https://baywet.github.io/fr/tags/full-trust/index.xml" rel="self" type="application/rss+xml"/><item><title>Provisionnement des services customs dans SharePoint</title><link>https://baywet.github.io/fr/provisionnement-des-services-c/</link><pubDate>Mon, 27 Jul 2015 03:20:29 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/provisionnement-des-services-c/</guid><description>Cet article s’adresse aux développeurs SharePoint full trust qui ont (vont) développé un service (SPService) pour SharePoint.
En effet dans le cadre où vous bâtissez un produit pour SharePoint comme on le fait chez Negotium (www.oceanik.com www.theattributesolution.com ) vous avez probablement intégré une application de service dans votre solution.
Si c’est le cas votre application de service a probablement un service SharePoint dédié pour exécuter son code (que ce soit un service porté par IIS ou un service windows).</description></item><item><title>Résolution de dépendance communes en développement de solutions full trust SharePoint</title><link>https://baywet.github.io/fr/resolution-de-dependance-commu/</link><pubDate>Sat, 18 Jul 2015 20:01:51 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/resolution-de-dependance-commu/</guid><description>Bonjour à tous,
Chez Negotium technologies nous développons plusieurs produits pour SharePoint. (www.oceanik.com www.theattributesolution.com …)
Un problème assez complexe nous est récemment arrivé. Imaginez que ces deux produits aient une dépendance commune (newtonsoft.json pour ne pas la nommer). Maintenant imaginez que les deux produits soient installés sur une même ferme SharePoint et que pour une raison quelconque vous vouliez désinstaller uniquement un des produits.
Quand SharePoint va rétracter le wsp, il va naturellement rétracter toutes les dll’s qui étaient dedans.</description></item><item><title>Localisation du JavaScript d’une solution Full Trust</title><link>https://baywet.github.io/fr/localisation-du-javascript-dun/</link><pubDate>Wed, 13 Aug 2014 03:58:20 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/localisation-du-javascript-dun/</guid><description>Introduction Nous, développeurs SharePoint des anciens temps où régnaient les solutions « full trust » avons bien compris une chose : l’utilisation de JavaScript améliore de loin nos solutions.
En effet cela permet de diminuer la charge des serveurs et de rendre l’expérience utilisateur plus « responsive ».
Mais voilà, lorsque l’on veut afficher des messages dans des langues différentes en fonction de l’utilisateur, comment faire ? En .NET (comprenez côté serveur) c’est assez simple, il suffit d’utiliser des ressources.</description></item></channel></rss>