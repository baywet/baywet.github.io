<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>entity framework on Le blog de baywet</title><link>https://baywet.github.io/fr/tags/entity-framework/</link><description>Recent content in entity framework on Le blog de baywet</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Thu, 03 Mar 2016 14:00:00 +0000</lastBuildDate><atom:link href="https://baywet.github.io/fr/tags/entity-framework/index.xml" rel="self" type="application/rss+xml"/><item><title>Mise à jour maitrisée de schema SQL avec Entity Framework Code First dans un processus de livraison continue</title><link>https://baywet.github.io/fr/mise-a-jour-maitrisee-de-schem/</link><pubDate>Thu, 03 Mar 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/mise-a-jour-maitrisee-de-schem/</guid><description>Introduction Entity Framework est une technologie établie dans le domaine des ORM et dans le monde du .NET.
Note : Object Relational Mapping, qui fait le lien entre la persistance des données et le code plus « métier »
Il y a plusieurs méthodes pour établir le modèle de données l’une d’entre une étant le « code first » c’est-à-dire que c’est notre code qui va piloter l’évolution du schéma SQL.</description></item><item><title>Entity Framework et référence au dataContext pour une application web</title><link>https://baywet.github.io/fr/entity-framework-et-reference/</link><pubDate>Thu, 07 Nov 2013 02:59:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/entity-framework-et-reference/</guid><description>Lorsque l’on utilise l’entity framework et un datacontext on se pose souvent la question suivante :
Faut-il favoriser la performance et la simplicité d’utilisation ou bien la flexibilité (scalability) ?
(non ? vous ne vous posez pas ce genre de question existentielle ?)
Je détaille ma question :
Référence statique
Dans un premier cas vous faites une référence static au contexte, avec certaines fois du lazy loading et/ou une gestion du dispose dans le global.</description></item></channel></rss>