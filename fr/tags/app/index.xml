<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>App on Le blog de baywet</title><link>https://baywet.github.io/fr/tags/app/</link><description>Recent content in App on Le blog de baywet</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 19 Feb 2024 17:03:44 -0500</lastBuildDate><atom:link href="https://baywet.github.io/fr/tags/app/index.xml" rel="self" type="application/rss+xml"/><item><title>SystemUpdate enfin disponible en CSOM</title><link>https://baywet.github.io/fr/systemupdate-enfin-disponible/</link><pubDate>Thu, 15 Sep 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/systemupdate-enfin-disponible/</guid><description>C’est une bonne nouvelle pour les développeur SharePoint, la méthode SystemUpdate est enfin disponible depuis le Client Side Object Model.
En effet Microsoft a récemment publié une mise à jour des paquets nugets et la méthode figure parmi la liste des ajouts.
https://dev.office.com/blogs/new-sharepoint-csom-version-released-for-Office-365-august-2016-updated
Cette méthode est importante car elle permet d’effectuer une mise à jour d’élément de liste sans changer les informations de version, d’auteur, de publication et de date de modification.</description></item><item><title>Dépréciation des Apps Auto-hébergées</title><link>https://baywet.github.io/fr/depreciation-des-apps-auto-heb/</link><pubDate>Sat, 17 May 2014 19:08:14 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/depreciation-des-apps-auto-heb/</guid><description>Rappels
Pour rappel les apps auto-hébergées sont le modèles d’apps disponibleuniquement dans SharePoint online (office 365) qui provisionnent automatiquement un azure web site(et éventuellement une base sql azure) lorsqu’elles sont déployées.
Cela facilitait grandement les problématiques d’hébergement, de gestion des tenants (isolation des données de différents clients) et d’authentificationpuisqu’une grande partie de la configuration était faite automatiquement
Annonce Ça faisait déjà quelques temps que ce modèle d’applications était en suspens. En effet depuis plus d’un an que SharePoint 2013 est en production sur office 365, nous n’avions toujours pas la possibilité de :</description></item><item><title>Accès anonyme à une application auto-hébergée pour SharePoint</title><link>https://baywet.github.io/fr/acces-anonyme-a-une-applicatio/</link><pubDate>Wed, 12 Mar 2014 17:04:02 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/acces-anonyme-a-une-applicatio/</guid><description>Ces derniers jours j’ai travaillé sur une application auto-hébergée pour SharePoint (Office 365 en fait)
J’avais besoin de fournir un accès anonyme à une des pages sans que les clients de l’application aient à accorder l’accès anonyme à leur site SharePoint. Mais j’avais aussi besoin de lire des propriétés sur le web de l’app (app web, celui qui est provisionné lorsqu’on déploie une app)
J’ai beaucoup cherché mais j’ai fini par trouver la solution :</description></item><item><title>SharePoint autohosted app et ASP.NET MVC</title><link>https://baywet.github.io/fr/sharepoint-autohosted-app-et-a/</link><pubDate>Wed, 13 Nov 2013 03:55:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/sharepoint-autohosted-app-et-a/</guid><description>Faites des apps qu’ils disaient, ça sera plus facile qu’ils disaient…
Visual Studio 2013 apporte un nouveau Modèle de projet : SharePoint Auto hosted App MVC (Cool !)
J’aime bien SharePoint, J’aime bien le MVC alors pourquoi pas mélanger les deux ?
Pour rappel les apps SharePoint auto hébergées ne sont disponible que pour Office 365. Techniquement Office 365 va créer un Azure Website à la volée quand l’app est déployée.</description></item><item><title>SharePoint 2013 App et WSP</title><link>https://baywet.github.io/fr/sharepoint-2013-app-et-wsp/</link><pubDate>Wed, 25 Jul 2012 17:50:29 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/sharepoint-2013-app-et-wsp/</guid><description>Nouvel article pour continuer avec les nouveautés de SharePoint 2013 cette fois ci autour du modèle de développement. Non non administrateurs ne fuyez pas ça vous concerne aussi.
SharePoint 2013 introduit un nouveau modèle de développement, les app, celles-ci ne viennent pas remplacer les WSP, elles sont complémentaires. Ces apps arrivent pour combler quelques manques/défauts des WSP à savoir : - Temps de déploiement - Stabilité de la ferme (qui n’a jamais déployé un « mauvais » wsp ?</description></item></channel></rss>