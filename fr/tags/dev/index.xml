<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dev on Le blog de baywet</title><link>https://baywet.github.io/fr/tags/dev/</link><description>Recent content in dev on Le blog de baywet</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 16 Apr 2018 08:00:00 +0000</lastBuildDate><atom:link href="https://baywet.github.io/fr/tags/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Le mode de compatibilité Internet Explorer de SharePoint Online change</title><link>https://baywet.github.io/fr/le-mode-de-compatibilite-inter/</link><pubDate>Mon, 16 Apr 2018 08:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/le-mode-de-compatibilite-inter/</guid><description>Un peu d’histoire… Internet Explorer est le navigateur d’entreprise proéminant depuis plus de vingt ans maintenant. Nombre d’entre nous se souviendront de l’époque où nous devions avoir du code « compatible IE » et du code « compatible web ».
Parce qu’un nombre important d’entreprises avaient investi lourdement dans le navigateur en bâtissant des outils qui fonctionnaient uniquement avec une version spécifique du navigateur, Microsoft a fourni depuis bientôt dix ans un mode de compatibilité.</description></item><item><title>Utiliser PnP PowerShell avec Visual Studio Team Services (VSTS) et l'agent hébergé</title><link>https://baywet.github.io/fr/utiliser-pnp-powershell-avec-v/</link><pubDate>Fri, 29 Sep 2017 06:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/utiliser-pnp-powershell-avec-v/</guid><description>Visual Studio Team Services (VSTS) fournit des fonctionnalités d&amp;rsquo;intégration continue (CI) et de déploiement continu (CD) assez intéressant que vous pouvez utiliser au sein de vos pipelines DevOps et vos séquences automatisées pour vos développements.
Si vos solutions se reposent sur PnP PowerShell durant leurs phases de build et/ou de déploiement, vous aurez besoin d&amp;rsquo;avoir PnP PowerShell installé sur l&amp;rsquo;agent. Malheureusement l&amp;rsquo;agent hébergé n&amp;rsquo;a pas PnP PowerShell installé par défaut. Note: Cette documentation s&amp;rsquo;applique uniquement à l&amp;rsquo;agent hébergé 2017 et l&amp;rsquo;agent hébergé, l&amp;rsquo;agent hébergé base linux n&amp;rsquo;est pas supporté pour l&amp;rsquo;instant.</description></item><item><title>Déterminer si la librairie SharePoint est utilisée avec la nouvelle expérience</title><link>https://baywet.github.io/fr/determiner-si-la-librairie-sha/</link><pubDate>Wed, 15 Jun 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determiner-si-la-librairie-sha/</guid><description>Microsoft vient de commencer le déploiement de la nouvelle expérience des librairies de document SharePoint.
Nombreux d’entre nous avons bâti des personnalisations graphiques et/ou des composants logiques qui interagissent avec l’aspect des librairies de documents. (je pense notamment aux ScriptLink )
Aussi vous aurez peut-être besoin de déterminer dans quelle expérience vous vous trouvez afin d’exécuter du code adapté.
Après quelques recherches voici un exemple de solution.
https://gist.github.com/baywet/8fbb587023f306ee40bad00b3a23961a
Bons développements</description></item><item><title>Build de projets WSP/FTC SharePoint 2016</title><link>https://baywet.github.io/fr/build-de-projets-wspftc-sharep/</link><pubDate>Mon, 11 Apr 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/build-de-projets-wspftc-sharep/</guid><description>Avec la sortie de SharePoint 2016 et les MinRole, vous allez être nombreux à vouloir tester la migration de vos applicatifs encore en full trust code.
Pour cela, en plus d’avoir une machine de dev 2016 installée (avec vs 2015 à jour et le sdk office à jour), il faudra installer le preview 2 du sdk office
https://www.microsoft.com/en-us/download/details.aspx?id=51683&amp;amp;WT.mc_id=rss_alldownloads_all&amp;amp;utm_source=twitterfeed&amp;amp;utm_medium=twitter
Ensuite il ne vous rester plus qu’à mettre à jour les références et versions de SharePoint ciblées.</description></item><item><title>Migration Git – nettoyage des références TFS</title><link>https://baywet.github.io/fr/migration-git-nettoyage-des-r/</link><pubDate>Mon, 11 Jan 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/migration-git-nettoyage-des-r/</guid><description>J’ai récemment dû migrer plusieurs contrôles de code source depuis TFS vers Git (Git sur vsonline). Pour ce faire j’ai utilisé Git-Tfs https://github.com/git-tfs/git-tfs qui fait très bien le travail et est vraiment bien documenté https://github.com/git-tfs/git-tfs/blob/master/doc/usecases/migrate_tfs_to_git.md
A une étape de la documentation on vous conseille de supprimer les fichiers *.vspscc, *.vssscc et de nettoyer les fichiers *.sln et *.*proj des références vers TFS.
Ceci permet d’éviter que Visual Studio tente de se reconnecter à TFS à chaque fois que l’on ouvre projet/solution.</description></item><item><title>Erreur: unable to find version '3.1.2' of package 'appforsharepointonlinewebtoolkit'</title><link>https://baywet.github.io/fr/erreur-unable-to-find-version/</link><pubDate>Fri, 04 Sep 2015 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/erreur-unable-to-find-version/</guid><description>Avec les outils de développement office pour visual studio 2015 (et probablement aussi avec la mise à jour Aout 2015 pour VS2013, mais je n’ai pas testé) il est possible que vous obteniez l’erreur suivante :
unable to find version &amp;lsquo;3.1.2&amp;rsquo; of package &amp;lsquo;appforsharepointonlinewebtoolkit&amp;rsquo;
Et ce lorsque vous effectuez un « update-package » dans la console nuget ou que vous avez une étape de restauration des packages dans votre processus de build.</description></item><item><title>Déplacement des Javascript des Apps (add-ins) SharePoint</title><link>https://baywet.github.io/fr/deplacement-des-javascript-des/</link><pubDate>Tue, 09 Jun 2015 03:56:25 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/deplacement-des-javascript-des/</guid><description>Chez Negotium nous avons récemment rencontré un problème assez étrange.
Imaginez que vous avez bâti une app pour SharePoint précédement (Provider-Hosted)
Imaginez maintenant que vous avez mis à jour vers la dernière version du SDK (mise à jour de Avril/Mai)
Maintenant imaginez que votre tenant a été mis à jour récemment (v16.0.4121.1212 ou supérieure).
Comme c’était préconisé lorsque Microsoft a livré le modèle d’applications, il y a de fortes chances que vous chargiez les SP.</description></item><item><title>Conférencier au MSDEVMTL – Développement office 365</title><link>https://baywet.github.io/fr/conferencier-au-msdevmtl-deve/</link><pubDate>Wed, 27 May 2015 14:30:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/conferencier-au-msdevmtl-deve/</guid><description>Le 8 Juin prochain j’aurai l’occasion d’intervenir au MSDEVMTL pour parler du développement office.
Au programme :
Opportunités Développement Office Développement SharePoint Développement Office 365 L’objectif étant de démontrer que le développement office/office 365/SharePoint a bien évolué ces dernières années aux développeurs .NET « classiques » et que les méthodologies de développement sont bien plus similaires à ce qu’ils connaissent.
Quand on parle de développement office (au sens large) c’est un marché de 1.</description></item><item><title>Ayez tous les outils d’une startup de première classe en 10 min</title><link>https://baywet.github.io/fr/ayez-tous-les-outils-dune-star/</link><pubDate>Thu, 03 Jul 2014 03:58:58 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/ayez-tous-les-outils-dune-star/</guid><description>Au travers de ma carrière j’ai eu la chance d’être impliqué dans plusieurs startups et/ou petites entreprises essayant de créer un produit ou service numérique. Cependant une question se pose très rapidement :
Comment avoir des outils de travail efficaces en minimisant l’impact financier ?
Et par impact financier j’entends aussi le temps passé à les mettre en place, car c’est du temps qu’on ne passe pas sur son cœur de métier ou plus généralement à créer de la valeur.</description></item><item><title>Disponibilité des Samples et SDK office 365 sur Github</title><link>https://baywet.github.io/fr/disponibilite-des-samples-et-s/</link><pubDate>Fri, 27 Jun 2014 16:52:20 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/disponibilite-des-samples-et-s/</guid><description>Pour ceux qui ne l’auraient pas encore vu les équipes de Microsoft qui travaillent sur Office 365 ont créé un espace sur GitHub.
https://github.com/officedev
Qu’est-ce qu’on va y trouver ?
Des exemples de code réalisés par Microsoft et par la communauté
Des démonstrations présentées pendant les sessions de Microsoft et par la communauté
Une partie des « documents » sources pour la documentation MSDN</description></item><item><title>Accès anonyme à une application auto-hébergée pour SharePoint</title><link>https://baywet.github.io/fr/acces-anonyme-a-une-applicatio/</link><pubDate>Wed, 12 Mar 2014 17:04:02 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/acces-anonyme-a-une-applicatio/</guid><description>Ces derniers jours j’ai travaillé sur une application auto-hébergée pour SharePoint (Office 365 en fait)
J’avais besoin de fournir un accès anonyme à une des pages sans que les clients de l’application aient à accorder l’accès anonyme à leur site SharePoint. Mais j’avais aussi besoin de lire des propriétés sur le web de l’app (app web, celui qui est provisionné lorsqu’on déploie une app)
J’ai beaucoup cherché mais j’ai fini par trouver la solution :</description></item><item><title>Mise à jour de Mars des outils de développement Office pour Visual Studio</title><link>https://baywet.github.io/fr/mise-a-jour-de-mars-des-outils/</link><pubDate>Thu, 06 Mar 2014 03:14:51 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/mise-a-jour-de-mars-des-outils/</guid><description>Microsoft a publié une mise à jour pour les outils de développement Office dans Visual studio
Cette mise à jour permet de bénéficier du SP1 qui vient tout juste de sortir. Elle permet aussi de réaliser des apps pour PowerPoint et Access, améliore/ajoute des assistants de création/configuration des éléments du projet et intègre une compatibilité avec des sources de données plus variées.
La liste complète des nouveautés se trouve ici https://msdn.</description></item><item><title>Gestion des ressources, rendre vos solutions SharePoint « globally deployed »</title><link>https://baywet.github.io/fr/gestion-des-ressources-rendre/</link><pubDate>Thu, 23 Jan 2014 03:37:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/gestion-des-ressources-rendre/</guid><description>Introduction Cela fait quelques temps déjà que je voulais rédiger cet article, j’ai trouvé cette solution il y a quatre ou cinq mois déjà. Mais par manque de temps je n’ai pas pu le faire avant. Récemment Sébastien LEVERT, développeur SharePoint de haut vol et membre de la communauté SharePoint à Montréal, a publié un article qui traite du même genre de problématique. Allez le lire, je vais faire en sorte que nos deux articles soient complémentaires (faute d’avoir publié plus tôt) https://www.</description></item><item><title>Boost your SharePoint solutions with distributed cache!–Part 3–Let’s Code!</title><link>https://baywet.github.io/fr/boost-your-sharepoint-solution/</link><pubDate>Tue, 17 Dec 2013 12:06:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/boost-your-sharepoint-solution/</guid><description>Let’s code! All what you need is located in these namspaces Microsoft.SharePoint.DistributedCaching , Microsoft.SharePoint.DistributedCaching.Utilities, Microsoft.ApplicationServer.Caching, it is strictly forbidden to reference anything else coming from the appfabric sdk!
Another information, depending on your version of SharePoint and of Visual Studio it is possible that you don’t have these dll’s in SharePoint’s ISAPI (folders VS will look at to know which assemblies are available for your projects). In that case you will need to reference dll’s directly from their GAC location.</description></item><item><title>Boostez vos solutions SharePoint avec le cache distribué !–Partie 3–Le code</title><link>https://baywet.github.io/fr/boostez-vos-solutions-sharepoi-2013-12-14-20-21-00/</link><pubDate>Sat, 14 Dec 2013 20:21:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/boostez-vos-solutions-sharepoi-2013-12-14-20-21-00/</guid><description>Passons au code ! Tout ce dont vous avez besoin se situe dans ces namespaces Microsoft.SharePoint.DistributedCaching (https://msdn.microsoft.com/en-us/library/office/microsoft.sharepoint.distributedcaching.aspx ), Microsoft.SharePoint.DistributedCaching.Utilities, Microsoft.ApplicationServer.Caching (https://msdn.microsoft.com/en-us/library/microsoft.applicationserver.caching(v=azure.10).aspx ), interdit de référencer quoi que ce soit d’autre venant d’appfabric.
Autre information, il est possible que selon la version de visual studio installée et celle de sharepoint vous n’ayez pas les dll dans l’ISAPI de SharePoint (les dossiers que va regarder Visual Studio pour savoir quels sont les assemblies à disposition).</description></item><item><title>Boostez vos solutions SharePoint avec le cache distribué !–Partie 2–Explications et astuces</title><link>https://baywet.github.io/fr/boostez-vos-solutions-sharepoi-2013-12-12-09-08-00/</link><pubDate>Thu, 12 Dec 2013 09:08:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/boostez-vos-solutions-sharepoi-2013-12-12-09-08-00/</guid><description>Explications, trucs, astuces et avertissements Explications Ce cluster de cache est en fait composé d’hôtes appfabric (caching services) Un des gros avantage est que les hôtes qui ne font pas partie du cluster mais interagissent avec gardent une copie locale des objets. Et cette copie est automatiquement maintenue à jour. En clair pas besoin d’implémenter un pattern lazy loading pour éviter les allers-retours sur le réseau.
Comment est-ce que ça fonctionne ?</description></item><item><title>Boostez vos solutions SharePoint avec le cache distribué !–Partie 1 Introduction</title><link>https://baywet.github.io/fr/boostez-vos-solutions-sharepoi-2013-12-11-01-15-14/</link><pubDate>Wed, 11 Dec 2013 01:15:14 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/boostez-vos-solutions-sharepoi-2013-12-11-01-15-14/</guid><description>Prélude J’étais parti pour faire uniquement un article, mais j’ai constaté en cours de route qu’il y avait plein de choses à expliquer. De plus je suis bavard, ça ne m’aide pas forcément. J’ai donc opté pour une série d’articles (3). Un article sera publié tous les deux jours à compter d’aujourd’hui. L’exemple de code sera fourni avec le dernier article, ça vous oblige à lire jusqu’à la fin ;-) Bonne lecture, et n’hésitez pas à commenter.</description></item><item><title>Entity Framework et référence au dataContext pour une application web</title><link>https://baywet.github.io/fr/entity-framework-et-reference/</link><pubDate>Thu, 07 Nov 2013 02:59:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/entity-framework-et-reference/</guid><description>Lorsque l’on utilise l’entity framework et un datacontext on se pose souvent la question suivante :
Faut-il favoriser la performance et la simplicité d’utilisation ou bien la flexibilité (scalability) ?
(non ? vous ne vous posez pas ce genre de question existentielle ?)
Je détaille ma question :
Référence statique
Dans un premier cas vous faites une référence static au contexte, avec certaines fois du lazy loading et/ou une gestion du dispose dans le global.</description></item><item><title>Le developer dashboard reste vide sur SharePoint 2013</title><link>https://baywet.github.io/fr/le-developer-dashboard-reste-v/</link><pubDate>Thu, 08 Aug 2013 02:54:14 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/le-developer-dashboard-reste-v/</guid><description>Vous l’avez déjà remarqué mais le développer dashboard de SharePoint a bien évolué sous SharePoint 2013. Intégrant plein de nouvelles données et étant plus clair à lire.
Cependant il peut arriver qu’il reste désespérément vide, le tout sans message d’erreur très explicite dans les logs SharePoint, ce qui est parfois frustrant.
Le point de départ de la mise en route de cet outil formidable est l’application de service d’usage et statiques (puisqu’il faut bien que quelque chose s’occupe de connecter les données) j’ai trouvé un post assez bien fait sur le sujet à vous de lire https://www.</description></item></channel></rss>