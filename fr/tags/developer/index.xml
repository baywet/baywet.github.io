<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>developer on Le blog de baywet</title><link>https://baywet.github.io/fr/tags/developer/</link><description>Recent content in developer on Le blog de baywet</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Fri, 28 Nov 2014 01:55:34 +0000</lastBuildDate><atom:link href="https://baywet.github.io/fr/tags/developer/index.xml" rel="self" type="application/rss+xml"/><item><title>Mise à jour de Novembre des outils développeurs Office</title><link>https://baywet.github.io/fr/mise-a-jour-de-novembre-des-ou/</link><pubDate>Fri, 28 Nov 2014 01:55:34 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/mise-a-jour-de-novembre-des-ou/</guid><description>Si vous faites du développement SharePoint vous avez sûrement remarqué que les outils ont une nouvelle mise à jour de disponible.
Avec les précédentes versions, les dll’s Microsoft.SharePoint.Client.Search et Microsoft.SharePoint.Client.Search.Applications n’étaient pas présentes (probablement un oubli).
Deux solutions s’offraient alors à vous :
Vous assurer que tous vos développeurs avaient les binaires de SharePoint installés sur leur machine Embarquer une copie de la dll prise sur une machine SharePoint Dans les deux cas ce n’était pas pratique.</description></item><item><title>Pourquoi ne pas inclure de contrôles télérik dans vos produits SharePoint ?</title><link>https://baywet.github.io/fr/pourquoi-ne-pas-inclure-de-con/</link><pubDate>Mon, 21 Jul 2014 03:31:14 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/pourquoi-ne-pas-inclure-de-con/</guid><description>Avant tout cet article se veut être un retour d’expérience sur un cas assez particulier du développement SharePoint. Les produits et composants telerik sont de très bons produits qui permettent d’accélérer vos développements (SharePoint ou non) en vous fournissant des contrôles utilisateurs poussés et paramétrables à souhait.
Certains d’entre vous le savent déjà, je travaille dans une équipe qui développe des produits pour SharePoint (www.oceanik.com et les autres n’ont pas encore de site dédié, on a encore du travail côté marketing).</description></item><item><title>Ayez tous les outils d’une startup de première classe en 10 min</title><link>https://baywet.github.io/fr/ayez-tous-les-outils-dune-star/</link><pubDate>Thu, 03 Jul 2014 03:58:58 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/ayez-tous-les-outils-dune-star/</guid><description>Au travers de ma carrière j’ai eu la chance d’être impliqué dans plusieurs startups et/ou petites entreprises essayant de créer un produit ou service numérique. Cependant une question se pose très rapidement :
Comment avoir des outils de travail efficaces en minimisant l’impact financier ?
Et par impact financier j’entends aussi le temps passé à les mettre en place, car c’est du temps qu’on ne passe pas sur son cœur de métier ou plus généralement à créer de la valeur.</description></item><item><title>Gestion des ressources, rendre vos solutions SharePoint « globally deployed »</title><link>https://baywet.github.io/fr/gestion-des-ressources-rendre/</link><pubDate>Thu, 23 Jan 2014 03:37:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/gestion-des-ressources-rendre/</guid><description>Introduction Cela fait quelques temps déjà que je voulais rédiger cet article, j’ai trouvé cette solution il y a quatre ou cinq mois déjà. Mais par manque de temps je n’ai pas pu le faire avant. Récemment Sébastien LEVERT, développeur SharePoint de haut vol et membre de la communauté SharePoint à Montréal, a publié un article qui traite du même genre de problématique. Allez le lire, je vais faire en sorte que nos deux articles soient complémentaires (faute d’avoir publié plus tôt) https://www.</description></item><item><title>Boost your SharePoint solutions with distributed cache!–Part 3–Let’s Code!</title><link>https://baywet.github.io/fr/boost-your-sharepoint-solution/</link><pubDate>Tue, 17 Dec 2013 12:06:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/boost-your-sharepoint-solution/</guid><description>Let’s code! All what you need is located in these namspaces Microsoft.SharePoint.DistributedCaching , Microsoft.SharePoint.DistributedCaching.Utilities, Microsoft.ApplicationServer.Caching, it is strictly forbidden to reference anything else coming from the appfabric sdk!
Another information, depending on your version of SharePoint and of Visual Studio it is possible that you don’t have these dll’s in SharePoint’s ISAPI (folders VS will look at to know which assemblies are available for your projects). In that case you will need to reference dll’s directly from their GAC location.</description></item><item><title>Boostez vos solutions SharePoint avec le cache distribué !–Partie 1 Introduction</title><link>https://baywet.github.io/fr/boostez-vos-solutions-sharepoi-2013-12-11-01-15-14/</link><pubDate>Wed, 11 Dec 2013 01:15:14 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/boostez-vos-solutions-sharepoi-2013-12-11-01-15-14/</guid><description>Prélude J’étais parti pour faire uniquement un article, mais j’ai constaté en cours de route qu’il y avait plein de choses à expliquer. De plus je suis bavard, ça ne m’aide pas forcément. J’ai donc opté pour une série d’articles (3). Un article sera publié tous les deux jours à compter d’aujourd’hui. L’exemple de code sera fourni avec le dernier article, ça vous oblige à lire jusqu’à la fin ;-) Bonne lecture, et n’hésitez pas à commenter.</description></item><item><title>SharePoint autohosted app et ASP.NET MVC</title><link>https://baywet.github.io/fr/sharepoint-autohosted-app-et-a/</link><pubDate>Wed, 13 Nov 2013 03:55:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/sharepoint-autohosted-app-et-a/</guid><description>Faites des apps qu’ils disaient, ça sera plus facile qu’ils disaient…
Visual Studio 2013 apporte un nouveau Modèle de projet : SharePoint Auto hosted App MVC (Cool !)
J’aime bien SharePoint, J’aime bien le MVC alors pourquoi pas mélanger les deux ?
Pour rappel les apps SharePoint auto hébergées ne sont disponible que pour Office 365. Techniquement Office 365 va créer un Azure Website à la volée quand l’app est déployée.</description></item><item><title>Entity Framework et référence au dataContext pour une application web</title><link>https://baywet.github.io/fr/entity-framework-et-reference/</link><pubDate>Thu, 07 Nov 2013 02:59:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/entity-framework-et-reference/</guid><description>Lorsque l’on utilise l’entity framework et un datacontext on se pose souvent la question suivante :
Faut-il favoriser la performance et la simplicité d’utilisation ou bien la flexibilité (scalability) ?
(non ? vous ne vous posez pas ce genre de question existentielle ?)
Je détaille ma question :
Référence statique
Dans un premier cas vous faites une référence static au contexte, avec certaines fois du lazy loading et/ou une gestion du dispose dans le global.</description></item><item><title>Le developer dashboard reste vide sur SharePoint 2013</title><link>https://baywet.github.io/fr/le-developer-dashboard-reste-v/</link><pubDate>Thu, 08 Aug 2013 02:54:14 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/le-developer-dashboard-reste-v/</guid><description>Vous l’avez déjà remarqué mais le développer dashboard de SharePoint a bien évolué sous SharePoint 2013. Intégrant plein de nouvelles données et étant plus clair à lire.
Cependant il peut arriver qu’il reste désespérément vide, le tout sans message d’erreur très explicite dans les logs SharePoint, ce qui est parfois frustrant.
Le point de départ de la mise en route de cet outil formidable est l’application de service d’usage et statiques (puisqu’il faut bien que quelque chose s’occupe de connecter les données) j’ai trouvé un post assez bien fait sur le sujet à vous de lire https://www.</description></item></channel></rss>