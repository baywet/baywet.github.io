<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>outils on Le blog de baywet</title><link>https://baywet.github.io/fr/tags/outils/</link><description>Recent content in outils on Le blog de baywet</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Fri, 28 Nov 2014 01:55:34 +0000</lastBuildDate><atom:link href="https://baywet.github.io/fr/tags/outils/index.xml" rel="self" type="application/rss+xml"/><item><title>Mise à jour de Novembre des outils développeurs Office</title><link>https://baywet.github.io/fr/mise-a-jour-de-novembre-des-ou/</link><pubDate>Fri, 28 Nov 2014 01:55:34 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/mise-a-jour-de-novembre-des-ou/</guid><description>Si vous faites du développement SharePoint vous avez sûrement remarqué que les outils ont une nouvelle mise à jour de disponible.
Avec les précédentes versions, les dll’s Microsoft.SharePoint.Client.Search et Microsoft.SharePoint.Client.Search.Applications n’étaient pas présentes (probablement un oubli).
Deux solutions s’offraient alors à vous :
Vous assurer que tous vos développeurs avaient les binaires de SharePoint installés sur leur machine Embarquer une copie de la dll prise sur une machine SharePoint Dans les deux cas ce n’était pas pratique.</description></item><item><title>Migration Team Foundation Server 2010 vers Visual Studio Online : différence de modèle de processus</title><link>https://baywet.github.io/fr/migration-team-foundation-serv/</link><pubDate>Mon, 30 Jun 2014 03:41:34 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/migration-team-foundation-serv/</guid><description>Mise en contexte
Dans ma compagnie (www.negotium.com ) nous sommes en train de réaliser une migration importante pour nous peuple du développement : TFS 2010 vers visual studio online (ex tfs online).
Cela va apporter beaucoup de nouvelles possibilités et outils à notre façon de développer et ça va permettre à notre département TI de décommissionner une (plusieurs en fait) machine. Je suis en train de préparer un article plus complet sur les avantages de la solution en ligne par rapport à l’édition en ligne.</description></item><item><title>Mise à jour des Outils CKS</title><link>https://baywet.github.io/fr/mise-a-jour-des-outils-cks/</link><pubDate>Thu, 22 Aug 2013 17:43:50 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/mise-a-jour-des-outils-cks/</guid><description>Nombreux sont ceux d’entre nous, développeurs SharePoint 2013, qui rencontrons des problèmes avec les outils de développement Visual Studio 2012 pour SharePoint 2013.
CKS améliorait un peu notre quotidien mais des problèmes comme “pourquoi la nouvelle version de mon assembly est pas dans le GAC?” ou bien “j’arrive plus à déployer/rétracter” sont encore assez courants.
CKS vient de publier une nouvelle version 1.2 qui corrige beaucoup de problèmes, pensez à mettre à jour donc!</description></item><item><title>Le developer dashboard reste vide sur SharePoint 2013</title><link>https://baywet.github.io/fr/le-developer-dashboard-reste-v/</link><pubDate>Thu, 08 Aug 2013 02:54:14 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/le-developer-dashboard-reste-v/</guid><description>Vous l’avez déjà remarqué mais le développer dashboard de SharePoint a bien évolué sous SharePoint 2013. Intégrant plein de nouvelles données et étant plus clair à lire.
Cependant il peut arriver qu’il reste désespérément vide, le tout sans message d’erreur très explicite dans les logs SharePoint, ce qui est parfois frustrant.
Le point de départ de la mise en route de cet outil formidable est l’application de service d’usage et statiques (puisqu’il faut bien que quelque chose s’occupe de connecter les données) j’ai trouvé un post assez bien fait sur le sujet à vous de lire https://www.</description></item><item><title>SharePoint Auto Upgrade Solution</title><link>https://baywet.github.io/fr/sharepoint-auto-upgrade-soluti/</link><pubDate>Wed, 18 Apr 2012 14:41:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/sharepoint-auto-upgrade-soluti/</guid><description>Récemment un collègue de travail (Laurent COTTON) a publié un projet codeplex assez intéressant :
https://sharepointautoupgrad.codeplex.com/
Cette solution permet d’automatiser et de planifier simplement la mise à jour de solutions SharePoint.
C’est très utile dans des scénarios d’intégration continue, de développement et de tests quand des versions sont fréquemment livrées et qu’il faut souvent mettre à jour la plateforme.
Je vous laisse profiter de cet outil très pratique, n’hésitez pas à lui faire des retours !</description></item><item><title>Visual Studio 2010 &amp; les outils autours des données (SQL)</title><link>https://baywet.github.io/fr/visual-studio-2010-amp-les-out/</link><pubDate>Wed, 11 Jan 2012 12:17:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/visual-studio-2010-amp-les-out/</guid><description>Introduction Visual Studio comporte plusieurs outils souvent méconnus des développeurs pour ce qui est de la « gestion » des bases de données SQL Server. Ne vous êtes-vous jamais posé la question, après avoir modifié le fichier EDMX d’une application en production pour constituer une nouvelle version : « Comment être sûr de n’avoir rien oublié avant de mettre en PROD ?»
Ou bien encore après avoir joué des modifications sur les données en elle-même en production et en développement « comment vais-je faire pour avoir les mêmes données partout ?</description></item></channel></rss>