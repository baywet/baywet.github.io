<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>.net on Le blog de baywet</title><link>https://baywet.github.io/fr/tags/.net/</link><description>Recent content in .net on Le blog de baywet</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 18 Aug 2015 14:00:00 +0000</lastBuildDate><atom:link href="https://baywet.github.io/fr/tags/.net/index.xml" rel="self" type="application/rss+xml"/><item><title>Librairie .NET Alchemy API</title><link>https://baywet.github.io/fr/librairie-net-alchemy-api/</link><pubDate>Tue, 18 Aug 2015 14:00:00 +0000</pubDate><guid>https://baywet.github.io/fr/librairie-net-alchemy-api/</guid><description>Cela fait plusieurs mois que je « joue » avec plusieurs services d’analyse sémantique. J’ai notamment découvert en avril www.alchemyapi.com Un des aspects intéressant étant qu’ils ont été rachetés il y a peu par IBM.
Analyse sémantique Qu’est-ce que l’analyse sémantique ? c’est l’analyse de données texte (ou d’images aussi dans certains cas) et d’essayer de comprendre le sens du contenu pour en extraire les métadonnées. C’est un peu comme si je vous donnais un document, demandais de le lire et disais « de quels concepts ça traite ?</description></item><item><title>Entity Framework et référence au dataContext pour une application web</title><link>https://baywet.github.io/fr/entity-framework-et-reference/</link><pubDate>Thu, 07 Nov 2013 02:59:00 +0000</pubDate><guid>https://baywet.github.io/fr/entity-framework-et-reference/</guid><description>Lorsque l’on utilise l’entity framework et un datacontext on se pose souvent la question suivante :
Faut-il favoriser la performance et la simplicité d’utilisation ou bien la flexibilité (scalability) ?
(non ? vous ne vous posez pas ce genre de question existentielle ?)
Je détaille ma question :
Référence statique
Dans un premier cas vous faites une référence static au contexte, avec certaines fois du lazy loading et/ou une gestion du dispose dans le global.</description></item></channel></rss>