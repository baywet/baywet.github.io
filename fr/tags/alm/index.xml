<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Alm on Le blog de baywet</title><link>https://baywet.github.io/fr/tags/alm/</link><description>Recent content in Alm on Le blog de baywet</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 15 Apr 2024 10:13:42 -0400</lastBuildDate><atom:link href="https://baywet.github.io/fr/tags/alm/index.xml" rel="self" type="application/rss+xml"/><item><title>Actions GitHub: étiquetage et commentaire automatique des pull requests en conflit</title><link>https://baywet.github.io/fr/actions-github-label-comment-conflit/</link><pubDate>Sun, 13 Sep 2020 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/actions-github-label-comment-conflit/</guid><description>Les dépôts open source permettent une productivité considérable dans le développement de logiciels. La croissance de la base d&amp;rsquo;utilisateurs se traduit généralement par une croissance du nombre de contributeurs, qui à son tour se traduit par une meilleure solution apportant plus d&amp;rsquo;utilisateurs, etc. La maintenance de grands dépôts open source peut prendre du temps car vous passez de plus en plus de temps à revoir des contributions. Ne vous méprenez pas, ce temps passé à examiner les pull requests est généralement bien investi car il représente un facteur de gain: pour des minutes passées à revoir une pull request donnée, la base de code bénéficie d&amp;rsquo;heures d&amp;rsquo;efforts de développement investis par le contributeur.</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 14 - Conclusion</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-12-02-14-00-00/</link><pubDate>Fri, 02 Dec 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-12-02-14-00-00/</guid><description>L’installation et la mise en place de SonarQube peut paraitre assez complexe et fastidieuse.
J’espère que cette suite d’articles et les scripts que je vous ai fournis vous ont permis d’aller plus vite dans sa mise en place.
Vous avez maintenant la capacité de déterminer clairement votre dette technique et d’y remédier pour améliorer la qualité de vos développements.
Il est évident que voir apparaitre un millier de problèmes dans le code peut être décourageant, gardez simplement cela en tête :</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 13 - Bonus configuration de l’extension SonarLint</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-30-14-00-00/</link><pubDate>Wed, 30 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-30-14-00-00/</guid><description>TL ; DR Vous avez la possibilité d’afficher les résultats d’analyse SonarQube en direct dans la console erreur et informations de Visual Studio avec la même base de règles configurées pour le projet d’analyse que sur le serveur.
Installation de l’extension Simplement se rendre sur https://www.sonarlint.org/visualstudio/index.html et procéder à l’installation.
Liaison de la solution Visual Studio au Projet d’analyse Depuis le Team Explorer cliquer sur SonarQube
Cliquer sur connecter.
(si vous avez une erreur de certificats, il vous faudra installer le certificat auto-signé de la machine)</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 12 - Contrôle des résultats</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-28-14-00-00/</link><pubDate>Mon, 28 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-28-14-00-00/</guid><description>TL ; DR Les erreurs d’analyse statique vont apparaitre comme des warnings dans la section compilation. Un badge d’état de l’analyse statique va apparaitre sur la page de rapport de la build et vous aurez des résultats visibles dans SonarQube.
Résultats affichés avec la build Lorsque vous lancez une build au résultat vous trouverez un encart supplémentaire pointant vers les résultats de l’analyse statique
Résultats visibles dans SonarQube Sur votre instance de SonarQube vous trouverez des résultats d’analyse qui indiqueront la progression ou la regression du code.</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 12 - Mise à jour de votre définition de build</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-25-14-00-00/</link><pubDate>Fri, 25 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-25-14-00-00/</guid><description>TL ; DR L’analyse statique va s’effectuer au moment où vous buildez votre projet. Notez que pour le moment seule une intégration avec msbuild (la tâche Visual Studio Build) existe.
Si vous buildez des projets avec node/npm ou autres, il est possible que la configuration requise soit différente ainsi que les outils (tâches gulp par exemple).
Ajout des tâches à la définition Nous partirons du principe que vous avez déjà une build 2015 en place</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 11 - Ajout du projet SonarQube</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-23-14-00-00/</link><pubDate>Wed, 23 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-23-14-00-00/</guid><description>TL ; DR SonarQube a une notion de projet d’analyse. Ces projets vont regrouper les résultats d’analyse de votre code. Vous pouvez configurer un projet par dépôt de code ou même par branche pour avoir des deltas d’analyse différents. (ex ma master build tous les mois, je veux voir l’évolution au par mois et ma dev tous les jours donc je veux voir l’évolution tous les jours).
Ajout du projet Pour cela rendez-vous dans « configuration » -&amp;gt; « Projects » -&amp;gt; « Management » puis « create project »</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 10 - Création d’un compte de service et référencement dans VSTS</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-21-14-00-00/</link><pubDate>Mon, 21 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-21-14-00-00/</guid><description>TL ; DR Pour éviter que m’importe qui puisse envoyer des résultats d’analyse sur votre serveur SonarQube, nous allons créer un compte de service et forcer l’authentification.
Création du compte de service Pour cela rendez-vous dans administration, sécurité, utilisateurs et ajoutez un compte.
Provisionnement du compte de service Pour le référencer dans VSTS, rendez-vous sur votre projet d’équipe, cliquez sur paramètres (la roue crantée), Services, nouveau service générique et entrez url, nom d’usager et mot de passe du compte de service.</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 9 - Configuration d’Azure Active directory pour l’authentification</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-18-14-00-00/</link><pubDate>Fri, 18 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-18-14-00-00/</guid><description>TL ; DR Nous allons installer et configurer un module complémentaire pour déléguer l’authentification à Azure Active Directory. Cela permettra à nos développeurs d’utiliser le même compte entre Visual Studio Team Services et SonarQube.
Configuration du module d’authentification Depuis la version 5.4 SonarQube dispose d&amp;rsquo;un plugin supplémentaire pour configurer l&amp;rsquo;authentification avec AAD en se reposant sur OAuth. Cela va vous permettre d&amp;rsquo;utiliser vos comptes d&amp;rsquo;entreprise pour authentifier les collaborateurs et leur donner des permissions.</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 8 - Ajout de modules</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-16-14-00-00/</link><pubDate>Wed, 16 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-16-14-00-00/</guid><description>TL ; DR L’analyse statique fonctionne à l’aide de règles. Ces règles sont regroupées par langages ou familles de langages dans des modules que vous pouvez installer. Outre l’apport du support de langages de développements ces modules peuvent étendre les fonctionnalités natives de SonarQube.
La plupart sont gratuits et libres, certains sont soumis à des licences commerciales.
Installation des modules complémentaires Rendez-vous dans configuration, système, et recherchez puis installez les modules qui vous intéressent.</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 7 - Installation de la machine</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-14-14-00-00/</link><pubDate>Mon, 14 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-14-14-00-00/</guid><description>TL ; DR Nous allons mettre la machine à jour, installer docker dessus, provisionner les conteneurs dont nous avons besoin.
Installation de docker et mises à jour Connectez-vous en ssh sur la machine (Putty est un très bon client pour windows) et exécutez les commandes suivantes :
https://github.com/baywet/azure-docker-sonarqube#step-4-setup-docker
Mise en place des conteneurs, création des certifcats Les conteneurs sont les composants de notre installation qui vont effectuer le travail de gérer le trafic web et fournir le service de SonarQube.</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 6 - Création de la base de données</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-11-14-00-00/</link><pubDate>Fri, 11 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-11-14-00-00/</guid><description>TL ; DR Création d’une db sql azure avec la collation SQL_Latin1_General_CP1_CS_AS.
Détails de la création de la base Les étapes de création de base de données SQL Azure sont déjà bien décrites, point de détail important : utiliser la collation suivante : SQL_Latin1_General_CP1_CS_AS. (et utiliser un modèle vide)
https://github.com/baywet/azure-docker-sonarqube#step-3-create-the-azure-sql-database
Notez les accès à la base de données (FQDN du serveur, nom utilisateur, mot de passe, nom de la base) quelque part, nous en aurons besoin plus tard.</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 5 - Ouverture du port de SonarQube</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-09-14-00-00/</link><pubDate>Wed, 09 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-09-14-00-00/</guid><description>TL ; DR Ouvrez les ports 22, 9000, 80 et 443 en entrant sur la VM.
Détail de l’ouverture des ports Plutôt que de répéter ce qui est déjà documenté, je préfère vous fournir le lien directement
https://github.com/baywet/azure-docker-sonarqube#step-2-opening-firewall-ports
Il faut ouvrir les ports 22, 80, 443 et 9000 qui vont nous permettre respectivement de communiquer avec la machine, y accéder en http et https, et accéder à la console de gestion.</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 4 - Provisionnement de la VM SonarQube</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-07-14-00-00/</link><pubDate>Mon, 07 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-07-14-00-00/</guid><description>TL ; DR Provisionnez un ubuntu server dans Azure, installez Putty et WinSCP sur votre machine locale
Détail du provisionnement Voici un lien vers une documentation pour vous expliquer comment faire
https://github.com/baywet/azure-docker-sonarqube#step-1-create-the-virtual-machine-in-azure
Voilà ! la machine est en cours de provisionnement !
Pendant ce temps profitez-en pour télécharger un terminal SSH si vous n’en avez pas déjà un, je vous recommande https://www.putty.org/</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 3 - La topologie</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-04-14-00-00/</link><pubDate>Fri, 04 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-04-14-00-00/</guid><description>TL ; DR Planification, Sources, Build, Déploiement, Tests : VSTS. Analyse : Azure VM (SonarQube), Azure SQL.
Détail de la topologie de notre industrie logicielle Curieux de l’essayer j’ai pris du temps pour le mettre en place avec Visual Studio Team Services. Etant donné que nous utilisons un maximum des services cloud chez Negotium j’ai réalisé l’installation suivante :
Contrôle de code source : VSTS (git ou tfsvc ça n&amp;rsquo;a pas d&amp;rsquo;importance)</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 2 - Analyse Statique</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-02-14-00-00/</link><pubDate>Wed, 02 Nov 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-11-02-14-00-00/</guid><description>TL ; DR L’analyse statique ça permet de comprendre les faiblesses du code en se basant sur un ensemble de règles. On peut réaliser ça côté serveur de manière automatisée ou bien depuis l’IDE.
Introduction à l’analyse statique Le principe de l’analyse statique est de se baser sur des ensembles de règles plus ou moins complexes qui vont détecter des modèles dans le code qui sont problématiques et catégoriser leur important ainsi que proposer une résolution.</description></item><item><title>Déterminez votre dette technique à l’aide de SonarQube : 1 - Introduction</title><link>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-10-31-14-00-00/</link><pubDate>Mon, 31 Oct 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/determinez-votre-dette-techniq-2016-10-31-14-00-00/</guid><description>TL ; DR Cette série va vous expliquer comment mettre en place une analyse de la qualité de votre code automatique, pour presque gratuit avec Visual Studio Team Services, Docker, Azure, et SonarQube.
Préambule Dans tous nos projets de développement on a tous du code de mauvaise qualité. Cela va du hack dont on est pas fier et qu’on a dû réaliser rapidement à un certain moment au code réalisé il fut un temps par un développeur qui a quitté la compagnie et dont personne n’est au courant.</description></item><item><title>Conférencier au SharePoint Saturday Lyon 2016</title><link>https://baywet.github.io/fr/conferencier-au-sharepoint-sat-2016-09-12-14-00-00/</link><pubDate>Mon, 12 Sep 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/conferencier-au-sharepoint-sat-2016-09-12-14-00-00/</guid><description>J’ai le plaisir de vous annoncer que j’ai été sélectionné comme conférencier pour le SPS Lyon 2016. J’animerai une session autour de l’ALM des développements SharePoint/Office 365 avec Azure « Mise en place de votre processus de livraison continue pour Office365/SharePoint avec Azure et Visual studio Team Services » (aka devops).
Si vous êtes dans le coin le Samedi 8 Octobre n’hésitez pas à vous inscrire et à participer. Pour rappel les SPS ce sont des évènements gratuits organisés par la communauté avec des sessions de qualité.</description></item><item><title>Nouvelles tâches de build/release disponibles pour les projets dotnetcore et vsts</title><link>https://baywet.github.io/fr/nouvelles-taches-de-buildrelea/</link><pubDate>Wed, 10 Aug 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/nouvelles-taches-de-buildrelea/</guid><description>Il y a quelques mois je vous avais écrit une suite d’articles sur la mise en place d’un release pipeline pour les projets dotnetcore/dnx vers Azure web apps.
Cette suite d’articles demandait de mettre en place un certain nombre de scripts et de les exécuter à l’aide de tâches powershell.
Vous n’avez désormais plus besoin de faire ça (sauf pour la partie tests) car deux extensions sont désormais disponibles sur le marketplace :</description></item><item><title>Conférencier au SharePoint Saturday Houston 2016</title><link>https://baywet.github.io/fr/conferencier-au-sharepoint-sat-2016-04-01-14-00-00/</link><pubDate>Fri, 01 Apr 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/conferencier-au-sharepoint-sat-2016-04-01-14-00-00/</guid><description>J&amp;rsquo;ai le privilège d’être conférencier au SPS de Houston (première fois!!). J’animerai cette fois une session autour des métadonnées en entreprise « Setting up your release pipeline for SharePoint and Office 365 developements » (en anglais donc).
Nous verrons au cours de cette session les outils de build et de release de visual studio online (Team foundation services), comment mettre en place des plans de build, de release etc etc. Tout l’outillage pour automatiser un maximum d’actions et rendre votre équipe de développement beaucoup plus productive.</description></item><item><title>Conférencier au SharePoint Saturday Montréal 2016</title><link>https://baywet.github.io/fr/conferencier-au-sharepoint-sat-2016-03-30-15-29-00/</link><pubDate>Wed, 30 Mar 2016 15:29:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/conferencier-au-sharepoint-sat-2016-03-30-15-29-00/</guid><description>Cette année encore j’aurai l’honneur d’être conférencier au SharePoint Saturday de Montréal
J’ai aussi eu l’occasion d’aider à l’organisation aussi cette année encore, c’est une expérience intéressante et je tiens à remercier Serge, Nico, Luc, Seb et Fabrice pour leur implication sur le projet, c’est beaucoup plus de travail qu’on imagine !
Je présenterai une session sur la mise en place de votre cycle de release pour vos développements SharePoint/Office 365</description></item><item><title>Tests unitaires xUnit avec Visual Studio Team Services de projets DNX</title><link>https://baywet.github.io/fr/tests-unitaires-xunit-avec-vis/</link><pubDate>Tue, 01 Mar 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/tests-unitaires-xunit-avec-vis/</guid><description>Tests unitaires xUnit avec Visual Studio Team Services de projets DNX
Introduction Avec DNX qui va bientôt passer en version finale vous allez être de plus en plus nombreux à vouloir effectuer des tests unitaires afin de vous assurer de la qualité des développements effectués.
Idéalement ces tests seront exécutés dans un processus d’intégration continue afin de s’assurer qu’il n’y a pas eu de régressions techniques, fonctionnelles et/ou de performance.</description></item><item><title>Incrémenter automatiquement le numéro de version de fonctionnalité SharePoint avec le build 2015</title><link>https://baywet.github.io/fr/incrementer-automatiquement-le/</link><pubDate>Wed, 18 Nov 2015 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/incrementer-automatiquement-le/</guid><description>Depuis quelques mois Microsoft a livré un nouveau système de build automatisé avec visual studio online / tfs 2015.
Ce système est bien plus ouvert que les anciennes build XAML, à base de tâches et plus facile à personnaliser.
Une des tâches existantes permet d’exécuter un script powershell.
Supposons que pour une raison quelconque vous souhaitiez incrémenter automatiquement le numéro de version de vos fonctionnalités SharePoint (au sein de votre solution) au moment du build.</description></item><item><title>Conférencier au SharePoint Saturday Ottawa 2015</title><link>https://baywet.github.io/fr/conferencier-au-sharepoint-sat-2015-11-10-14-00-00/</link><pubDate>Tue, 10 Nov 2015 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/conferencier-au-sharepoint-sat-2015-11-10-14-00-00/</guid><description>Cette année encore j’ai l’occasion d’être conférencier au SPS d’Ottawa. J’animerai cette fois une session autour de l’ALM des développements SharePoint/Office 365 avec Azure « Setting up your release pipeline for SharePoint in Azure » (en anglais donc).
Si vous êtes dans le coin le Samedi 21 Novembre 2015 n’hésitez pas à vous inscrire et à participer. Pour rappel les SPS ce sont des évènements gratuits organisés par la communauté avec des sessions de qualité.</description></item><item><title>Déploiement de Cloud services Azure via les builds 2015</title><link>https://baywet.github.io/fr/deploiement-de-cloud-services/</link><pubDate>Tue, 04 Aug 2015 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/deploiement-de-cloud-services/</guid><description>Introduction au nouveau système de build Microsoft a récemment rendu disponible un nouveau modèle de définitions de build avec la version 2015 de Visual studio (les binaires tfs 2015 ne sont pas encore disponibles mais le service est déjà présent dans Visual Studio Online).
Pour rappel, les « anciens » modèles de build étaient basés sur deux éléments :
Le build process template : en XAML, qui définit les étapes que va suivre la séquence de build Le build défintion : qui va servir de liant entre le template, les sources et un ensemble de paramètres.</description></item><item><title>Build automatisé de solutions SharePoint (full trust) 2013 – Où sont mes solutions?</title><link>https://baywet.github.io/fr/build-automatise-de-solutions/</link><pubDate>Thu, 04 Dec 2014 01:11:39 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/build-automatise-de-solutions/</guid><description>Suite de la série sur le build automatisé de solutions SharePoint 2013 (full trust) avec tfs 2013 et visual studio 2013.
build-automatise-de-solution-s
Si vous avez suivit ma série vous avez dû vous rendre compte que les dll étaient compilées mais que les wsp étaient absents.
C’est parce que par défault msbuild ne package pas vos solutions. C’est dommage hein ?
Voici un peu de documentation supplémentaire qui indique d’ajouter IsPackaging=true à la définition de build en tant que paramètre.</description></item><item><title>Visual Studio 2013 Update 4 et build automatisé de solutions SharePoint (full trust)</title><link>https://baywet.github.io/fr/visual-studio-2013-update-4-et/</link><pubDate>Mon, 01 Dec 2014 00:07:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/visual-studio-2013-update-4-et/</guid><description>Pour faire suite à ma série sur le build automatisé de solutions full trust pour SharePoint voici une mise à jour de mon correctif.
En effet si vous regardez la seconde erreur expliquée icivous verrez qu’il faut remplacer des lignes pour faire fonctionner le tout.
Avec l’update 4 on sent que Microsoft prépare l’arrivée complète du 64 bits puisque les nouvelles lignes de remplacement sont désormais.
&amp;lt;Import Condition=&amp;#34;&amp;#39;$(Language)&amp;#39; == &amp;#39;C#&amp;#39;&amp;#34; Project=&amp;#34;$(MSBuildExtensionsPath32)\Microsoft\Windows Workflow Foundation\v3.</description></item><item><title>Build automatisé de solution SharePoint server (fulltrust) avec visual studio online</title><link>https://baywet.github.io/fr/build-automatise-de-solution-s/</link><pubDate>Wed, 29 Oct 2014 02:22:08 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/build-automatise-de-solution-s/</guid><description>Introduction Depuis plusieurs articles j’évoque le fait que nous (Negotium, la compagnie où je travaille) avons migré vers visual studio online (TFS Online). Ce service offre une majorité des fonctionnalités offertes par la version on premises de Team Foundation Server 2013 et même certaines fonctionnalités exclusives.
Si vous n’avez qu’une vague idée de ce que peut faire TFS2013/VSO et que vous voulez en apprendre plus je vous recommande très fortement Professional Application Lifecycle Management de chez Wrox.</description></item><item><title>Conversion d’un certificat protégé par mot de passe (pfx) en certificat non protégé (snk)</title><link>https://baywet.github.io/fr/conversion-dun-certificat-prot/</link><pubDate>Sat, 04 Oct 2014 01:05:51 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/conversion-dun-certificat-prot/</guid><description>Au travail je suis en train de mettre en place du build automatisé pour des projets SharePoint (full trust) sur visual studio online. (Attendez-vous à voir plusieurs articles à ce sujet au fur et à mesure que je rencontre et résous des erreurs)
Qui dit développement SharePoint dit assemblies signés par un certificat. Lorsque l’on initialise le projet on a deux options :
Certificat est protégé par mot de passe : (extension pfx) c’était au début du tooling SharePoint, ou bien si vous avez monté la structure de solution (visual studio) vous-même avec plusieurs assemblies.</description></item></channel></rss>