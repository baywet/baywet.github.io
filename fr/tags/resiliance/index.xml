<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Resiliance on Le blog de baywet</title><link>https://baywet.github.io/fr/tags/resiliance/</link><description>Recent content in Resiliance on Le blog de baywet</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 19 Feb 2024 15:51:13 -0500</lastBuildDate><atom:link href="https://baywet.github.io/fr/tags/resiliance/index.xml" rel="self" type="application/rss+xml"/><item><title>Résolution de dépendance communes en développement de solutions full trust SharePoint</title><link>https://baywet.github.io/fr/resolution-de-dependance-commu/</link><pubDate>Sat, 18 Jul 2015 20:01:51 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/resolution-de-dependance-commu/</guid><description>Bonjour à tous,
Chez Negotium technologies nous développons plusieurs produits pour SharePoint. (www.oceanik.com www.theattributesolution.com …)
Un problème assez complexe nous est récemment arrivé. Imaginez que ces deux produits aient une dépendance commune (newtonsoft.json pour ne pas la nommer). Maintenant imaginez que les deux produits soient installés sur une même ferme SharePoint et que pour une raison quelconque vous vouliez désinstaller uniquement un des produits.
Quand SharePoint va rétracter le wsp, il va naturellement rétracter toutes les dll’s qui étaient dedans.</description></item></channel></rss>