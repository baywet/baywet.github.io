<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on Le blog de baywet</title><link>https://baywet.github.io/fr/tags/tools/</link><description>Recent content in Tools on Le blog de baywet</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 15 Apr 2024 10:13:42 -0400</lastBuildDate><atom:link href="https://baywet.github.io/fr/tags/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Migration Git – nettoyage des références TFS</title><link>https://baywet.github.io/fr/migration-git-nettoyage-des-r/</link><pubDate>Mon, 11 Jan 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/migration-git-nettoyage-des-r/</guid><description>J’ai récemment dû migrer plusieurs contrôles de code source depuis TFS vers Git (Git sur vsonline). Pour ce faire j’ai utilisé Git-Tfs https://github.com/git-tfs/git-tfs qui fait très bien le travail et est vraiment bien documenté https://github.com/git-tfs/git-tfs/blob/master/doc/usecases/migrate_tfs_to_git.md
A une étape de la documentation on vous conseille de supprimer les fichiers *.vspscc, *.vssscc et de nettoyer les fichiers *.sln et *.*proj des références vers TFS.
Ceci permet d’éviter que Visual Studio tente de se reconnecter à TFS à chaque fois que l’on ouvre projet/solution.</description></item><item><title>Migration Team Foundation Server 2010 vers Visual Studio Online : différence de modèle de processus</title><link>https://baywet.github.io/fr/migration-team-foundation-serv/</link><pubDate>Mon, 30 Jun 2014 03:41:34 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/migration-team-foundation-serv/</guid><description>Mise en contexte
Dans ma compagnie (www.negotium.com ) nous sommes en train de réaliser une migration importante pour nous peuple du développement : TFS 2010 vers visual studio online (ex tfs online).
Cela va apporter beaucoup de nouvelles possibilités et outils à notre façon de développer et ça va permettre à notre département TI de décommissionner une (plusieurs en fait) machine. Je suis en train de préparer un article plus complet sur les avantages de la solution en ligne par rapport à l’édition en ligne.</description></item><item><title>The VHD must be stored as a page blob. Upload a vhd to azure</title><link>https://baywet.github.io/fr/the-vhd-must-be-stored-as-a-pa-2014-03-05-01-45-11/</link><pubDate>Wed, 05 Mar 2014 01:45:11 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/the-vhd-must-be-stored-as-a-pa-2014-03-05-01-45-11/</guid><description>Context I recently had to setup a SharePoint farm on Azure. It’s a great tool in terms of provisioning delays and simplicity of usage. In order to setup my farm I needed ISO files (installation media). The most recommended way to do that according to the documentation is to locally create a vhd file and upload it to azure to then attach it to your machine.
As a fellow developer I thought right away “azure has a great tooling inside Visual Studio, we have a storage explorer, let’s use it”.</description></item><item><title>The VHD must be stored as a page blob. Uploader un vhd vers azure</title><link>https://baywet.github.io/fr/the-vhd-must-be-stored-as-a-pa-2014-03-05-01-40-57/</link><pubDate>Wed, 05 Mar 2014 01:40:57 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/fr/the-vhd-must-be-stored-as-a-pa-2014-03-05-01-40-57/</guid><description>Mise en contexte Récemment j’ai dû monter une ferme SharePoint sur Windows Azure. C’est très pratique en termes de délais de provisionnement et de simplicité d’utilisation. Pour monter ma ferme, j’avais besoin de fichiers ISO (de sources d’installation). En lisant la documentation j’apprends que la manière la plus recommandée d’effectuer cela est de tout mettre dans un vhd en local, de pousser ce vhd sur azure puis de l’attacher à la vm en question.</description></item></channel></rss>