<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>github on Baywet's blog</title><link>https://baywet.github.io/tags/github/</link><description>Recent content in github on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Fri, 07 Apr 2023 15:00:00 +0000</lastBuildDate><atom:link href="https://baywet.github.io/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>Shipping a product at Microsoft: Kiota</title><link>https://baywet.github.io/shipping-kiota-microsoft/</link><pubDate>Fri, 07 Apr 2023 15:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/shipping-kiota-microsoft/</guid><description>Introduction We recently announced the general availability of Kiota, an open source client generator for REST APIs with an OpenAPI description. I am the co-founder of this product, and this launch matches my 3 years anniversary at Microsoft, so I thought I would take the time to write about my experience of taking a product from idea to v1 at Microsoft.
Throughout my career, I have been involved with multiple “products”: a second-hand marketplace for industrial hardware, an enterprise social network solution, a localization and translation solution for SharePoint, and an IoT based temperature management optimization solution.</description></item><item><title>One year as a Software Developer at Microsoft</title><link>https://baywet.github.io/one-year-developer/</link><pubDate>Mon, 06 Sep 2021 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/one-year-developer/</guid><description>One year as a Software Developer at Microsoft Introduction Back in September 2020, I published a blog post about my experience as a Program Manager at Microsoft that was well received. It made me realize that the community was curious and interested about this role. In this post, I will share my insights as a developer.
Before we begin, keep in mind this is my personal experience, which may differ a lot from team to team, product to product and depend on other circumstances (being remote, culture, etc…).</description></item><item><title>Revamping the Microsoft Graph Java SDK: a recipe to revive open-source repositories</title><link>https://baywet.github.io/github-repo-revival/</link><pubDate>Mon, 24 May 2021 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/github-repo-revival/</guid><description>Introduction Back in August 2020 I became the main maintainer of the Microsoft Graph Java SDK.
The team had to deprioritize this SDK in favor of other languages due to a lack of staff. About 100+ issues were open, as well as 15 pull requests from the community. Dependencies and tooling had not been updated, the Android story was unclear, no innovation had been done in a long time, the repository felt abandoned and caused a lot of frustrations…</description></item><item><title>GitHub Actions: Automatic conflicting pull request tagging and comment</title><link>https://baywet.github.io/pull-request-conflict-github-workflow/</link><pubDate>Sun, 13 Sep 2020 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/pull-request-conflict-github-workflow/</guid><description>Open-source repositories enable tremendous productivity in software development. Growth in user base usually translates in growth in contributors, which in turns translates in a better solution bringing more users and so on&amp;hellip; Maintaining large open-source repositories can be time-consuming as you spend more and more time reviewing contributions. Don&amp;rsquo;t take me wrong, that time spent reviewing pull requests is mostly well spent as it represents a factor of scale efficiency gain: for minutes spent reviewing any given pull request, the codebase benefits hours of development efforts invested by the contributor.</description></item><item><title>.Net Library for Alchemy API</title><link>https://baywet.github.io/net-library-for-alchemy-api/</link><pubDate>Tue, 18 Aug 2015 08:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/net-library-for-alchemy-api/</guid><description>It has been several months I’ve been “playing” with multiple semantic analysis services. I especially discovered www.alchemyapi.com in April. One interested thing about them being that IBM recently acquired them.
Semantic analysis What is semantic analysis? It’s analyzing text data (or sometimes pictures too) and trying to understand the meaning of the content in order to extract metadata from it. It’s a little lit if I were to give you a document and ask you to read it and say “what concepts is it about?</description></item><item><title>Availability of office 365 Samples and SDK on Github</title><link>https://baywet.github.io/availability-of-office-365-sam/</link><pubDate>Fri, 27 Jun 2014 16:53:59 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/availability-of-office-365-sam/</guid><description>For those who have not seen it yet Microsoft teams who work on Office 365 have created a hub on GitHub.
https://github.com/officedev
What are you going to find there?
Examples of code made by Microsoft and the community Demonstrations presented during the sessions from Microsoft and the community Part of the &amp;lsquo;documents&amp;rsquo; sources for the MSDN documentation SDK for &amp;rsquo;third&amp;rsquo; platforms (IOS, android&amp;hellip;) … The message behind that is Microsoft is investing in the community and wants to create a single place where developers (from any platform) can meet to participate in the projects together and share content.</description></item></channel></rss>