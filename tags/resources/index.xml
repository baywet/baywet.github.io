<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Resources on Baywet's blog</title><link>https://baywet.github.io/tags/resources/</link><description>Recent content in Resources on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 19 Feb 2024 16:56:03 -0500</lastBuildDate><atom:link href="https://baywet.github.io/tags/resources/index.xml" rel="self" type="application/rss+xml"/><item><title>Localizing JavaScript of a Full Trust solution</title><link>https://baywet.github.io/localizing-javascript-of-a-ful/</link><pubDate>Wed, 13 Aug 2014 03:58:16 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/localizing-javascript-of-a-ful/</guid><description>Introduction We, SharePoint developers of ancient times when &amp;ldquo;full trust&amp;rdquo; solutions ruled, have understood one thing: using JavaScript improves by far our solutions.
Indeed this allows to reduce the load of the servers and makes the user experience more &amp;ldquo;responsive&amp;rdquo;.
But what if you want to display messages in different languages depending on the user? In .NET (understand server-side) it is quite simple, just use of resources. (see one of my posts on the subject)</description></item><item><title>Managing Resources, how to make your SharePoint solutions “globally deployed”</title><link>https://baywet.github.io/managing-resources-how-to-make/</link><pubDate>Thu, 23 Jan 2014 03:39:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/managing-resources-how-to-make/</guid><description>Introduction I wanted to publish this article months ago, back to the time I found this solution. But I did not mostly because of a lack of free time. Sebastien LEVERT, a top SharePoint developer and a member of Montreal’s SharePoint community, recently published a post about the same subject. Read it (sorry it’s in French), I’ll write my post so it is complementary. https://www.pimpmysharepoint.com/2014/01/09/deployer-des-fichiers-de-ressources-simplement/
Reminders To quickly summarize, when you develop SharePoint solutions and you want to support multiple languages (localize it) you need to use .</description></item><item><title>(English) The name 'InitializeControl' does not exist in the current context Controles utilisateur, SharePoint 2013 and Ressources</title><link>https://baywet.github.io/the-name-initializecon/</link><pubDate>Sun, 07 Apr 2013 21:21:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/the-name-initializecon/</guid><description>This article is written for SharePoint developers who already developed multilingual webparts.
It is a good practice to localize an application when you develop for SharePoint, which will make the adding of a new language easier.
When we developed for SharePoint 2010 we used to put resources files in hive/config/resources (and then run a stsadm –o copyappbincontent or automate it via a timerjob when activating features)
Or we used to create an empty SharePoint solution element in which we added our files and indicated that the deployment target was the appglobalresources folder (see https://stackoverflow.</description></item></channel></rss>