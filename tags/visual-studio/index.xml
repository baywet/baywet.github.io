<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>visual studio on Baywet's blog</title><link>https://baywet.github.io/tags/visual-studio/</link><description>Recent content in visual studio on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Wed, 04 Oct 2017 08:00:00 +0000</lastBuildDate><atom:link href="https://baywet.github.io/tags/visual-studio/index.xml" rel="self" type="application/rss+xml"/><item><title>Determine your technical debt using SonarQube - Bonus SonarLint extension configuration</title><link>https://baywet.github.io/determine-your-technical-debt-2017-10-04-08-00-00/</link><pubDate>Wed, 04 Oct 2017 08:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/determine-your-technical-debt-2017-10-04-08-00-00/</guid><description>TL; DR You can display SonarQube static analysis results live in Visual Studio error and information console using the same rules set as the SonarQube project.
Installing the extension
Just go to https://www.sonarlint.org/VisualStudio/index.html and proceed with the installation.
Binding the Visual Studio solution to the SonarQube analysis From the Team Explorer click SonarQube
Click on connect.
(if you obtain a certificate error, you must install the self-signed certificate of the SonarQube server on your machine)</description></item><item><title>Determine your technical debt using SonarQube - Monitoring the results</title><link>https://baywet.github.io/determine-your-technical-debt-2017-10-02-08-00-00/</link><pubDate>Mon, 02 Oct 2017 08:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/determine-your-technical-debt-2017-10-02-08-00-00/</guid><description>TL; DR Static analysis errors will appear as of the warnings in the compilation section. A static analysis badge will also appear on the build report and you&amp;rsquo;ll be able to have detailed and comprehensive information from SonarQube.
Information incorporated with the build When displaying the details of a build, you&amp;rsquo;ll now find a new section dedicated to SonarQube. Within that section, besides the quality badge, you&amp;rsquo;ll also find a link to the static analysis results details.</description></item><item><title>Building SharePoint 2016 WSP/FTC projects</title><link>https://baywet.github.io/building-sharepoint-2016-wspft/</link><pubDate>Mon, 11 Apr 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/building-sharepoint-2016-wspft/</guid><description>WIth the release of SharePoint 2016 and the new MinRole feature, a lot of you would like to test migration of their custom solutions (Full Trust Code)
In order to do so, you need a 2016 dev machine (vs 2015 up to date with the latest version of the office sdk) and to install on top of that the office sdk preview 2.
https://www.microsoft.com/en-us/download/details.aspx?id=51683&amp;amp;WT.mc_id=rss_alldownloads_all&amp;amp;utm_source=twitterfeed&amp;amp;utm_medium=twitter
Then you only need to update references and targeted versions.</description></item><item><title>Automated build for SharePoint 2013 full trust solutions – Where are my solutions?</title><link>https://baywet.github.io/automated-build-for-sharepoint-2014-12-04-01-12-13/</link><pubDate>Thu, 04 Dec 2014 01:12:13 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/automated-build-for-sharepoint-2014-12-04-01-12-13/</guid><description>Another episode of my series about automated build of SharePoint full trust solutions with tfs 2013 and visual studio 2013.
/automated-build-for-sharepoint-2014-10-29-02-22-54
If you followed my posts you must have noticed you dll’s were built but you didn’t have any wsp.
This is because by default msbuild doesn’t package your solutions. That’s pity isn’t it?
Here is some documentation telling us to add IsPackaging=true to the build definition as a parameter.</description></item><item><title>Visual studio 2013 Update 4 and SharePoint full trust solutions automated build</title><link>https://baywet.github.io/visual-studio-2013-update-4-an/</link><pubDate>Mon, 01 Dec 2014 00:11:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/visual-studio-2013-update-4-an/</guid><description>Quick update on my serie about automated build for sharepoint full trust solutions.
If you take a look at the second error I’m describing hereyou will notice that you have to replace two lines in order to make it work.
With update 4 it looks like Microsoft is preparing full 64 bits support for visual studio. New fix lines are now
&amp;lt;Import Condition=&amp;#34;&amp;#39;$(Language)&amp;#39; == &amp;#39;C#&amp;#39;&amp;#34; Project=&amp;#34;$(MSBuildExtensionsPath32)\Microsoft\Windows Workflow Foundation\v3.5\Workflow.Targets&amp;#34; /&amp;gt; &amp;lt;Import Condition=&amp;#34;&amp;#39;$(Language)&amp;#39; == &amp;#39;VB&amp;#39;&amp;#34; Project=&amp;#34;$(MSBuildExtensionsPath32)\Microsoft\Windows Workflow Foundation\v3.</description></item><item><title>Office developers tools november 2014 update</title><link>https://baywet.github.io/office-developers-tools-novemb/</link><pubDate>Fri, 28 Nov 2014 01:56:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/office-developers-tools-novemb/</guid><description>If you work in SharePoint development you probably already have noticed that the tools are getting a new update.
With previous versions Microsoft.SharePoint.Client.Search and Microsoft.SharePoint.Client.Search.Applications dll’s were not included (it most likely has been forgotten)
You then had two solutions:
Ensure that all developers had SharePoint binaries installed on their machines Embed a copy of the dll taken from a SharePoint machine Both solutions were not very practical.
These dlls are now included for version 15 and 16 located here C:\Program Files\Common Files\microsoft shared\Web Server Extensions\</description></item><item><title>Automated build for SharePoint server (fulltrust) solutions with visual studio online</title><link>https://baywet.github.io/automated-build-for-sharepoint-2014-10-29-02-22-54/</link><pubDate>Wed, 29 Oct 2014 02:22:54 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/automated-build-for-sharepoint-2014-10-29-02-22-54/</guid><description>Introduction It has been a few articles I’ve been mentioning the fact that we (Negotium, the company I work for) have migrated to visual studio online (TFS Online). This service offers most of the features offered by the on premises version of Team Foundation Server 2013 and even some exclusive features.
If you have only a vague idea of what can do TFS2013/VSO and you want to learn more I very highly recommend Professional Application Lifecycle Management from Wrox.</description></item><item><title>Converting a protected by password certificate (pfx) to an unprotected one (snk)</title><link>https://baywet.github.io/converting-a-protected-by-pass/</link><pubDate>Sat, 04 Oct 2014 01:06:37 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/converting-a-protected-by-pass/</guid><description>At work I am trying to implement automated build for SharePoint (full trust) projects on visual studio online. (Expect to have several articles about this as and when I meet and solve errors)
When doing SharePoint development we have to sign assemblies with a certificate. When the project is initialized there are two options:
Certificate is protected by a password: (pfx extension) that was with first versions of SharePoint tooling, or if you have created the structure of (visual studio) solution yourself with several assemblies.</description></item><item><title>Have all the tools of a first class startup's in 10 min</title><link>https://baywet.github.io/have-all-the-tools-of-a-first/</link><pubDate>Thu, 03 Jul 2014 04:00:39 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/have-all-the-tools-of-a-first/</guid><description>Through my career I had the chance to be involved in several startups or small businesses trying to create a product or digital service. However a question arises very quickly:
How to have effective working tools while minimizing the financial impact?
And by impact financial I also mean the time spent to implement, because it is time that it not spent on its core business, or more generally to create added value.</description></item><item><title>Migrating Team Foundation Server 2010 to Visual Studio Online: difference of process model</title><link>https://baywet.github.io/migrating-team-foundation-serv/</link><pubDate>Mon, 30 Jun 2014 03:54:24 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/migrating-team-foundation-serv/</guid><description>Context In my company (www.negotium.com ) we are trying to achieve a significant migration for us people of development: TFS 2010 to visual studio online (ex tfs online).
This will bring many new opportunities and tools to our way of developing and it will allow our IT Department to decommission a (several in fact) machine. I&amp;rsquo;m preparing a more complete article on the benefits of the solution online from the online edition.</description></item><item><title>March Update of Visual Studio tools for Office</title><link>https://baywet.github.io/march-update-of-visual-studio/</link><pubDate>Thu, 06 Mar 2014 03:20:11 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/march-update-of-visual-studio/</guid><description>Microsoft recently publishing an update for Office development tools.
This update integrates SP1’s benefits. It also allows you to develop app for PowerPoint and Access, enhances/add creation/configuration wizards for projects elements and includes more data sources types.
You can find the detailed description of the update here https://msdn.microsoft.com/en-us/office/dn610877.aspx
It’s very simple to update your installation, open Visual Studio, tools, Extensions and updates.
Have fun coding!</description></item><item><title>SharePoint Auto hosted app and ASP.NET MVC</title><link>https://baywet.github.io/sharepoint-auto-hosted-app-and/</link><pubDate>Wed, 13 Nov 2013 04:16:32 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/sharepoint-auto-hosted-app-and/</guid><description>Code apps they said, it will be easier they said…
Visual Studio 2013 comes with a new project model : SharePoint autohosted app ASP.NET MVC (Cool!)
I’m fond of SharePoint, I like MVC, why not mixing them?
Short reminder, SharePoint autohosted apps are only available for Office 365. Technically Office 365 will create an Azure website on demand when app is deployed. The potential cost overhead will be billed directly to the tenant owner.</description></item><item><title>Entity Framework and dataContext reference for a web application</title><link>https://baywet.github.io/entity-framework-and-dataconte/</link><pubDate>Thu, 07 Nov 2013 03:40:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/entity-framework-and-dataconte/</guid><description>When using the entity framework with a data context we often have this problematic:
What’s the best between performance and simplicity of usage or scalability?
(no? you do not ask yourself that kind of existential question?)
Here is a little explanation :
Static instance
In this first case you wrote a static reference to the context. Sometimes you also add some lazy loading and/or disposal management in global.asax (application end event)</description></item></channel></rss>