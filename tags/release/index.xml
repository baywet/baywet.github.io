<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Release on Baywet's blog</title><link>https://baywet.github.io/tags/release/</link><description>Recent content in Release on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 19 Feb 2024 15:51:13 -0500</lastBuildDate><atom:link href="https://baywet.github.io/tags/release/index.xml" rel="self" type="application/rss+xml"/><item><title>New tasks to build/release dotnetcore project with vsts</title><link>https://baywet.github.io/new-tasks-to-buildrelease-dotn/</link><pubDate>Wed, 10 Aug 2016 14:02:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/new-tasks-to-buildrelease-dotn/</guid><description>A few months ago I wrote a series of articles on how to set up a release pipeline for dnx/dotnetcore projects with vsts targeting azure web apps.
This series would require you to use a few scripts to build and publish the website executing them using powershell tasks in the build definition.
You don’t need to do that anymore because two new extensions are available on the marketplace:
I’ve been able to replace most of my scripts using VSTS DNX Tasks</description></item><item><title>Speaking at SharePoint Saturday Houston 2016</title><link>https://baywet.github.io/speaking-at-sharepoint-saturda-2016-04-01-14-00-00/</link><pubDate>Fri, 01 Apr 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/speaking-at-sharepoint-saturda-2016-04-01-14-00-00/</guid><description>This year I have the privilege to speak at SPS Houston (first time!!). I’ll give a speech about “Setting up your release pipeline for SharePoint and Office 365 developments”.
We’ll see how you can automate all the things to make your development team more productive and more efficient. For that we’ll see how to set up build and release definitions and how you can leverage both azure and on premises environments</description></item><item><title>Speaking at SharePoint Saturday Montréal 2016</title><link>https://baywet.github.io/speaking-at-sharepoint-saturda-2016-03-30-15-36-54/</link><pubDate>Wed, 30 Mar 2016 15:36:54 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/speaking-at-sharepoint-saturda-2016-03-30-15-36-54/</guid><description>This year again I have the opportunity to speak at the SPS Montréal
I also had the occasion to help organize the event this year, it’s been an interesting experience so far and I’d like to thank Serge, Nico, Luc, Seb and Fabrice for their implication in that project, it’s much more work than what we think!
This time I’ll talk about setting up your release pipeline for SharePoint/Office 365 developments in Visual Studio Online (Team Foundation Services).</description></item><item><title>Controlled update of SQL databases Schema with Entity Framework Code First in a continous delivery process</title><link>https://baywet.github.io/controlled-update-of-sql-datab/</link><pubDate>Thu, 03 Mar 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/controlled-update-of-sql-datab/</guid><description>Introduction Entity Framework is a well-known technology in the ORM domain for the .NET world.
Note: Object Relational Mapping, this is the part between data persistence unit and some more “high level” code.
When you start a new entity framework project you have a few different ways to do it, one of which being “code first”. It means our code will drive the SQL Schema evolution (which simplifies a lot of things and allows you to focus on business and not technical implementation).</description></item></channel></rss>