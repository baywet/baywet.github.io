<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Open-Source on Baywet's blog</title><link>https://baywet.github.io/tags/open-source/</link><description>Recent content in Open-Source on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 19 Feb 2024 15:51:13 -0500</lastBuildDate><atom:link href="https://baywet.github.io/tags/open-source/index.xml" rel="self" type="application/rss+xml"/><item><title>Shipping a product at Microsoft: Kiota</title><link>https://baywet.github.io/shipping-kiota-microsoft/</link><pubDate>Fri, 07 Apr 2023 15:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/shipping-kiota-microsoft/</guid><description>Introduction We recently announced the general availability of Kiota, an open source client generator for REST APIs with an OpenAPI description. I am the co-founder of this product, and this launch matches my 3 years anniversary at Microsoft, so I thought I would take the time to write about my experience of taking a product from idea to v1 at Microsoft.
Throughout my career, I have been involved with multiple “products”: a second-hand marketplace for industrial hardware, an enterprise social network solution, a localization and translation solution for SharePoint, and an IoT based temperature management optimization solution.</description></item><item><title>One year as a Software Developer at Microsoft</title><link>https://baywet.github.io/one-year-developer/</link><pubDate>Mon, 06 Sep 2021 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/one-year-developer/</guid><description>One year as a Software Developer at Microsoft Introduction Back in September 2020, I published a blog post about my experience as a Program Manager at Microsoft that was well received. It made me realize that the community was curious and interested about this role. In this post, I will share my insights as a developer.
Before we begin, keep in mind this is my personal experience, which may differ a lot from team to team, product to product and depend on other circumstances (being remote, culture, etc…).</description></item><item><title>Revamping the Microsoft Graph Java SDK: a recipe to revive open-source repositories</title><link>https://baywet.github.io/github-repo-revival/</link><pubDate>Mon, 24 May 2021 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/github-repo-revival/</guid><description>Introduction Back in August 2020 I became the main maintainer of the Microsoft Graph Java SDK.
The team had to deprioritize this SDK in favor of other languages due to a lack of staff. About 100+ issues were open, as well as 15 pull requests from the community. Dependencies and tooling had not been updated, the Android story was unclear, no innovation had been done in a long time, the repository felt abandoned and caused a lot of frustrations…</description></item></channel></rss>