<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vsonline on Baywet's blog</title><link>https://baywet.github.io/tags/vsonline/</link><description>Recent content in Vsonline on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 15 Apr 2024 10:13:42 -0400</lastBuildDate><atom:link href="https://baywet.github.io/tags/vsonline/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Migration – cleaning up TFS references</title><link>https://baywet.github.io/git-migration-cleaning-up-tfs/</link><pubDate>Mon, 11 Jan 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/git-migration-cleaning-up-tfs/</guid><description>I recently had to migrate multiple source repositories from TFS to GIT (Git on vsonline). To do so I used Git Tfs https://github.com/git-tfs/git-tfs which does the job and is well documented https://github.com/git-tfs/git-tfs/blob/master/doc/usecases/migrate_tfs_to_git.md
There’s one step where they instruct you to remove *.vspscc and *.vssscc files and to clean up *.sln and *.*proj files from TFS references.
This will prevent Visual Studio from trying to reconnect to TFS every time you open the project/solution.</description></item><item><title>Automatically increment SharePoint feature version number during build with build 2015</title><link>https://baywet.github.io/automatically-increment-sharep/</link><pubDate>Wed, 18 Nov 2015 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/automatically-increment-sharep/</guid><description>A few months ago Microsoft released a new automated build system with visual studio online /tfs 2015.
This new mechanism is way more open than previous XAML builds, tasks based and easier to customize.
One of the available tasks allows you to run a powershell script.
Let’s say that for one reason you want to increment automatically the version number of your SharePoint features when building.
If you have a quick look at the “.</description></item></channel></rss>