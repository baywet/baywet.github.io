<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>distributed on Baywet's blog</title><link>https://baywet.github.io/tags/distributed/</link><description>Recent content in distributed on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Sun, 15 Dec 2013 12:06:00 +0000</lastBuildDate><atom:link href="https://baywet.github.io/tags/distributed/index.xml" rel="self" type="application/rss+xml"/><item><title>Boost your SharePoint solutions with distributed cache!–Part 2–Explanations tips and warnings</title><link>https://baywet.github.io/boost-your-sharepoint-solution-2013-12-15-12-06-00/</link><pubDate>Sun, 15 Dec 2013 12:06:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/boost-your-sharepoint-solution-2013-12-15-12-06-00/</guid><description>Explanations, tips, tricks and warnings Explanations This cache cluster is in facts made of appfabric hosts (caching services). One of the advantages is that hosts not members of the cluster but clients of it keep a local copy of objects. And this copy is automatically maintained up to date. The result is you do not need to implement a lazy loading pattern to avoid back and forth on the network.</description></item></channel></rss>