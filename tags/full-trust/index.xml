<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Full Trust on Baywet's blog</title><link>https://baywet.github.io/tags/full-trust/</link><description>Recent content in Full Trust on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 19 Feb 2024 17:03:44 -0500</lastBuildDate><atom:link href="https://baywet.github.io/tags/full-trust/index.xml" rel="self" type="application/rss+xml"/><item><title>Provisioning custom services for SharePoint</title><link>https://baywet.github.io/provisioning-custom-services-f/</link><pubDate>Mon, 27 Jul 2015 03:24:37 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/provisioning-custom-services-f/</guid><description>This article is targeting SharePoint full trust developers who have (will) developed a custom service (SPService) for SharePoint.
Indeed, if you are building a product for SharePoint like we’re doing at Negotium (www.oceanik.com www.theattributesolution.com ) you probably built a custom service application within your solution.
If that’s the case your custom service application probably relies on a dedicated custom SharePoint service to run its code (it can be a service within IIS or a windows service).</description></item><item><title>Shared dependencies resolution and SharePoint full trust development</title><link>https://baywet.github.io/shared-dependencies-resolution/</link><pubDate>Sat, 18 Jul 2015 20:03:42 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/shared-dependencies-resolution/</guid><description>Hi everybody,
At Negotium we’re building multiple SharePoint products (www.oceanik.com www.theattributesolution.com …)
We’ve recently had a complex issue. Let’s say these two products have a common dependency (newtonsoft.json in our case). Now let’s say both products are installed on a single farm and that for some reason you have to uninstall one of them.
When SharePoint will retract the wsp, it will retract all dll’s that were included within it. Including the common dependency the other product still needs.</description></item><item><title>Localizing JavaScript of a Full Trust solution</title><link>https://baywet.github.io/localizing-javascript-of-a-ful/</link><pubDate>Wed, 13 Aug 2014 03:58:16 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/localizing-javascript-of-a-ful/</guid><description>Introduction We, SharePoint developers of ancient times when &amp;ldquo;full trust&amp;rdquo; solutions ruled, have understood one thing: using JavaScript improves by far our solutions.
Indeed this allows to reduce the load of the servers and makes the user experience more &amp;ldquo;responsive&amp;rdquo;.
But what if you want to display messages in different languages depending on the user? In .NET (understand server-side) it is quite simple, just use of resources. (see one of my posts on the subject)</description></item></channel></rss>