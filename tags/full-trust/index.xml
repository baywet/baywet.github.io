<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>full trust on Baywet's blog</title><link>https://baywet.github.io/tags/full-trust/</link><description>Recent content in full trust on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Jul 2015 03:24:37 +0000</lastBuildDate><atom:link href="https://baywet.github.io/tags/full-trust/index.xml" rel="self" type="application/rss+xml"/><item><title>Provisioning custom services for SharePoint</title><link>https://baywet.github.io/provisioning-custom-services-f/</link><pubDate>Mon, 27 Jul 2015 03:24:37 +0000</pubDate><guid>https://baywet.github.io/provisioning-custom-services-f/</guid><description>This article is targeting SharePoint full trust developers who have (will) developed a custom service (SPService) for SharePoint.
Indeed, if you are building a product for SharePoint like we’re doing at Negotium (www.oceanik.com www.theattributesolution.com ) you probably built a custom service application within your solution.
If that’s the case your custom service application probably relies on a dedicated custom SharePoint service to run its code (it can be a service within IIS or a windows service).</description></item><item><title>Shared dependencies resolution and SharePoint full trust development</title><link>https://baywet.github.io/shared-dependencies-resolution/</link><pubDate>Sat, 18 Jul 2015 20:03:42 +0000</pubDate><guid>https://baywet.github.io/shared-dependencies-resolution/</guid><description>Hi everybody,
At Negotium we’re building multiple SharePoint products (www.oceanik.com www.theattributesolution.com …)
We’ve recently had a complex issue. Let’s say these two products have a common dependency (newtonsoft.json in our case). Now let’s say both products are installed on a single farm and that for some reason you have to uninstall one of them.
When SharePoint will retract the wsp, it will retract all dll’s that were included within it. Including the common dependency the other product still needs.</description></item></channel></rss>