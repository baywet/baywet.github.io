<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vso on Baywet's blog</title><link>https://baywet.github.io/tags/vso/</link><description>Recent content in vso on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Tue, 01 Mar 2016 14:00:00 +0000</lastBuildDate><atom:link href="https://baywet.github.io/tags/vso/index.xml" rel="self" type="application/rss+xml"/><item><title>Units tests using xUnit and Visual Studio Team Services for DNX projects</title><link>https://baywet.github.io/units-tests-using-xunit-and-vi/</link><pubDate>Tue, 01 Mar 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/units-tests-using-xunit-and-vi/</guid><description>Introduction DNX will soon be released and there’ll be a growing number of developers wanting to write unit tests to improve the quality of developments.
Ideally you’d like to run these unit tests in a continuous integration process in order to make sure you didn’t introduce any regression/bug or degraded performances.
In .NET world you have many tools to write unit tests:
MSTest/VSTest
NUnit
xUnit
…
(a non-exhaustive list https://en.wikipedia.org/wiki/List_of_unit_testing_frameworks#C.23 )</description></item><item><title>Building DNX projects using home installed build agent (TFS, VSTS)</title><link>https://baywet.github.io/building-dnx-projects-using-ho/</link><pubDate>Fri, 19 Feb 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/building-dnx-projects-using-ho/</guid><description>With DNX/DNU soon to be RTM there’ll be more and more developers eagers to build and deploy ASP.NET core 1 (formerly ASP.NET MVC 5) projects.
If the procedure is well described when you are using hosted agents (the ones microsoft runs for you on Azure), it’s a little more complex when you want to do it on a local agent.
https://msdn.microsoft.com/en-us/Library/vs/alm/Build/azure/deploy-aspnet5?f=255&amp;amp;MSPPError=-2147217396
On your agent’s machine you installed and updated visual studio and all the tools right?</description></item></channel></rss>