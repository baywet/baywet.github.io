<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apps on Baywet's blog</title><link>https://baywet.github.io/tags/apps/</link><description>Recent content in Apps on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 15 Apr 2024 10:13:42 -0400</lastBuildDate><atom:link href="https://baywet.github.io/tags/apps/index.xml" rel="self" type="application/rss+xml"/><item><title>SystemUpdate method available in CSOM at last!!!</title><link>https://baywet.github.io/systemupdate-method-available/</link><pubDate>Mon, 19 Sep 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/systemupdate-method-available/</guid><description>That’s good news for SharePoint developers, the SystemUpdate method is finally available in Client Side Object Model.
Indeed, Microsoft has recently released an update for nugget packages and the method is part of the new stuff.
https://dev.office.com/blogs/new-sharepoint-csom-version-released-for-Office-365-august-2016-updated
It’s an important method because it allows you to update a list item without changing modification date, author, publishing and versioning information.
Moreover, we’re numerous SharePoint developers migrating a lot of full trust solutions to SharePoint Add-ins, some of which were using this method and in some cases we have only an app-only context.</description></item><item><title>unable to find version '3.1.2' of package 'appforsharepointonlinewebtoolkit'</title><link>https://baywet.github.io/unable-to-find-version-312-of/</link><pubDate>Fri, 04 Sep 2015 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/unable-to-find-version-312-of/</guid><description>With office development tools for visual studio 2015 (and probably with august 2015 update for vs 2013 too, but I haven’t tried it), you may run into the following error:
unable to find version &amp;lsquo;3.1.2&amp;rsquo; of package &amp;lsquo;appforsharepointonlinewebtoolkit&amp;rsquo;
And so while doing an “update-package” in nuget console or if you have a restore packages step in your build process. (mandatory if like me you don’t include the packages folder into source control).</description></item><item><title>SharePoint apps (add-ins) JavaScript disappeared</title><link>https://baywet.github.io/sharepoint-apps-add-ins-javasc/</link><pubDate>Tue, 09 Jun 2015 04:09:37 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/sharepoint-apps-add-ins-javasc/</guid><description>At Negotium we recently came across a weird problem.
Let’s assume you previously built a Provider hosted app for SharePoint.
Now let’s assume you updated to the latest version of the SDK (April/May update)
Finally let’s assume your tenant has been updated recently (v16.0.4121.1212 or above)
It’s likely that you are loading SP.*.js files and MicrosoftAjax.js the way it used to be recommended by Microsoft per say: &amp;lt;HostWebUrl&amp;gt;/_layouts/15/jsfile.js or &amp;lt;AppWebUrl&amp;gt;/_layouts/15/jsfile.js.</description></item></channel></rss>