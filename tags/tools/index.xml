<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tools on Baywet's blog</title><link>https://baywet.github.io/tags/tools/</link><description>Recent content in tools on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 11 Jan 2016 14:00:00 +0000</lastBuildDate><atom:link href="https://baywet.github.io/tags/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Migration – cleaning up TFS references</title><link>https://baywet.github.io/git-migration-cleaning-up-tfs/</link><pubDate>Mon, 11 Jan 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/git-migration-cleaning-up-tfs/</guid><description>I recently had to migrate multiple source repositories from TFS to GIT (Git on vsonline). To do so I used Git Tfs https://github.com/git-tfs/git-tfs which does the job and is well documented https://github.com/git-tfs/git-tfs/blob/master/doc/usecases/migrate_tfs_to_git.md
There’s one step where they instruct you to remove *.vspscc and *.vssscc files and to clean up *.sln and *.*proj files from TFS references.
This will prevent Visual Studio from trying to reconnect to TFS every time you open the project/solution.</description></item><item><title>Office developers tools november 2014 update</title><link>https://baywet.github.io/office-developers-tools-novemb/</link><pubDate>Fri, 28 Nov 2014 01:56:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/office-developers-tools-novemb/</guid><description>If you work in SharePoint development you probably already have noticed that the tools are getting a new update.
With previous versions Microsoft.SharePoint.Client.Search and Microsoft.SharePoint.Client.Search.Applications dll’s were not included (it most likely has been forgotten)
You then had two solutions:
Ensure that all developers had SharePoint binaries installed on their machines Embed a copy of the dll taken from a SharePoint machine Both solutions were not very practical.</description></item><item><title>Have all the tools of a first class startup's in 10 min</title><link>https://baywet.github.io/have-all-the-tools-of-a-first/</link><pubDate>Thu, 03 Jul 2014 04:00:39 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/have-all-the-tools-of-a-first/</guid><description>Through my career I had the chance to be involved in several startups or small businesses trying to create a product or digital service. However a question arises very quickly:
How to have effective working tools while minimizing the financial impact?
And by impact financial I also mean the time spent to implement, because it is time that it not spent on its core business, or more generally to create added value.</description></item><item><title>Migrating Team Foundation Server 2010 to Visual Studio Online: difference of process model</title><link>https://baywet.github.io/migrating-team-foundation-serv/</link><pubDate>Mon, 30 Jun 2014 03:54:24 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/migrating-team-foundation-serv/</guid><description>Context In my company (www.negotium.com ) we are trying to achieve a significant migration for us people of development: TFS 2010 to visual studio online (ex tfs online).
This will bring many new opportunities and tools to our way of developing and it will allow our IT Department to decommission a (several in fact) machine. I&amp;rsquo;m preparing a more complete article on the benefits of the solution online from the online edition.</description></item></channel></rss>