<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>entity framework on Baywet's blog</title><link>https://baywet.github.io/tags/entity-framework/</link><description>Recent content in entity framework on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 03 Mar 2016 14:00:00 +0000</lastBuildDate><atom:link href="https://baywet.github.io/tags/entity-framework/index.xml" rel="self" type="application/rss+xml"/><item><title>Controlled update of SQL databases Schema with Entity Framework Code First in a continous delivery process</title><link>https://baywet.github.io/controlled-update-of-sql-datab/</link><pubDate>Thu, 03 Mar 2016 14:00:00 +0000</pubDate><guid>https://baywet.github.io/controlled-update-of-sql-datab/</guid><description>Introduction Entity Framework is a well-known technology in the ORM domain for the .NET world.
Note: Object Relational Mapping, this is the part between data persistence unit and some more “high level” code.
When you start a new entity framework project you have a few different ways to do it, one of which being “code first”. It means our code will drive the SQL Schema evolution (which simplifies a lot of things and allows you to focus on business and not technical implementation).</description></item><item><title>Entity Framework and dataContext reference for a web application</title><link>https://baywet.github.io/entity-framework-and-dataconte/</link><pubDate>Thu, 07 Nov 2013 03:40:00 +0000</pubDate><guid>https://baywet.github.io/entity-framework-and-dataconte/</guid><description>When using the entity framework with a data context we often have this problematic:
What’s the best between performance and simplicity of usage or scalability?
(no? you do not ask yourself that kind of existential question?)
Here is a little explanation :
Static instance
In this first case you wrote a static reference to the context. Sometimes you also add some lazy loading and/or disposal management in global.asax (application end event)</description></item></channel></rss>