<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>development on Baywet's blog</title><link>https://baywet.github.io/tags/development/</link><description>Recent content in development on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Sun, 26 Aug 2018 08:00:00 +0000</lastBuildDate><atom:link href="https://baywet.github.io/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Speaking at the European SharePoint Conference 2018 and free discount for you!</title><link>https://baywet.github.io/speaking-at-the-european-share-2018-08-26-08-00-00/</link><pubDate>Sun, 26 Aug 2018 08:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/speaking-at-the-european-share-2018-08-26-08-00-00/</guid><description>I am delighted to announce I have been selected to speak at the European SharePoint Conference 2018. This event will take place in Copenhagen, Denmark from the 26th to the 29th of November.
I will be speaking about “Migrate your custom components to the SharePoint Framework”.
“It’s the 3rd model Microsoft has come with to customize SharePoint in less than 5 years. You may still have add-ins/apps or even solutions running in production and you’re asking yourself what to do about all that?</description></item><item><title>Speaking at SharePoint Saturday New York City 2018</title><link>https://baywet.github.io/speaking-at-sharepoint-saturda-2018-06-27-08-00-00/</link><pubDate>Wed, 27 Jun 2018 08:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/speaking-at-sharepoint-saturda-2018-06-27-08-00-00/</guid><description>This year again I have the opportunity to speak at the SPS NYC.
I’ll give a speech about “Migrate your custom components to the SharePoint Framework”.
Together we will see how you can transition from either the server-side object model or the add-ins development fashions to the modern SharePoint Framework approach. This session is mostly meant for developers and technical architects who are curious about getting started on the new model and that might have legacy applications.</description></item><item><title>New SharePoint Framework PnP Samples available: using the Skype UCWA Web SDK to subscribe to people’s status</title><link>https://baywet.github.io/new-sharepoint-framework-pnp-s/</link><pubDate>Mon, 08 Jan 2018 09:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/new-sharepoint-framework-pnp-s/</guid><description>TL;DR; I added two new SharePoint framework WebParts PnP sample to demonstrate how to use the Unified Communications Web API JavaScript SDK from Skype for business. This SDK allows you to do things like subscribe to a person status, start instant messaging conversations, calls…
To get a look:
The plain JS sample The reactJS + Office UI Fabric React sample(persona card) Long version I recently had the occasion to make my first contribution to PnP (besides creating issues and helping investigate those).</description></item><item><title>Full version of lodash now available in the SharePoint Framework</title><link>https://baywet.github.io/full-version-of-lodash-now-ava/</link><pubDate>Wed, 03 Jan 2018 03:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/full-version-of-lodash-now-ava/</guid><description>TL; DR; Microsoft replaced @types/es6-collections by the es2015.collection library in version 1.4.0 of the packages. Those had a conflicting definition of weakmap which caused issues with packages like lodash.
Long version Microsoft recently release v1.4.0 of the SharePoint Framwork and it’s packages. It contains a lot of improvements and one of those probably went unnoticed by many of us.
@types/es6-collections has been replaced by es2015.collection library (native, comes with the compiler/JS Engines).</description></item><item><title>SystemUpdate method available in CSOM at last!!!</title><link>https://baywet.github.io/systemupdate-method-available/</link><pubDate>Mon, 19 Sep 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/systemupdate-method-available/</guid><description>That’s good news for SharePoint developers, the SystemUpdate method is finally available in Client Side Object Model.
Indeed, Microsoft has recently released an update for nugget packages and the method is part of the new stuff.
https://dev.office.com/blogs/new-sharepoint-csom-version-released-for-Office-365-august-2016-updated
It’s an important method because it allows you to update a list item without changing modification date, author, publishing and versioning information.
Moreover, we’re numerous SharePoint developers migrating a lot of full trust solutions to SharePoint Add-ins, some of which were using this method and in some cases we have only an app-only context.</description></item><item><title>Git Migration – cleaning up TFS references</title><link>https://baywet.github.io/git-migration-cleaning-up-tfs/</link><pubDate>Mon, 11 Jan 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/git-migration-cleaning-up-tfs/</guid><description>I recently had to migrate multiple source repositories from TFS to GIT (Git on vsonline). To do so I used Git Tfs https://github.com/git-tfs/git-tfs which does the job and is well documented https://github.com/git-tfs/git-tfs/blob/master/doc/usecases/migrate_tfs_to_git.md
There’s one step where they instruct you to remove *.vspscc and *.vssscc files and to clean up *.sln and *.*proj files from TFS references.
This will prevent Visual Studio from trying to reconnect to TFS every time you open the project/solution.</description></item><item><title>Programmatically add permissions to “everyone” in SharePoint Online</title><link>https://baywet.github.io/programmatically-add-permissio/</link><pubDate>Wed, 07 Oct 2015 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/programmatically-add-permissio/</guid><description>At some point you may want to add permissions to the “everyone” “groupe” of SharePoint.
Indeed this will allow you to set permissions to all users already having access to this site (because they are already members of other groups or already have permissions). This “group” is different of “NT AUTHORITY\authenticated users » which represents successfully identified users (bigger group).
The only thing is that “group” is in fact a user, so it’s helpless to iterate on every group of the site collection hoping to find it.</description></item><item><title>Provisioning custom services for SharePoint</title><link>https://baywet.github.io/provisioning-custom-services-f/</link><pubDate>Mon, 27 Jul 2015 03:24:37 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/provisioning-custom-services-f/</guid><description>This article is targeting SharePoint full trust developers who have (will) developed a custom service (SPService) for SharePoint.
Indeed, if you are building a product for SharePoint like we’re doing at Negotium (www.oceanik.com www.theattributesolution.com ) you probably built a custom service application within your solution.
If that’s the case your custom service application probably relies on a dedicated custom SharePoint service to run its code (it can be a service within IIS or a windows service).</description></item><item><title>Shared dependencies resolution and SharePoint full trust development</title><link>https://baywet.github.io/shared-dependencies-resolution/</link><pubDate>Sat, 18 Jul 2015 20:03:42 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/shared-dependencies-resolution/</guid><description>Hi everybody,
At Negotium we’re building multiple SharePoint products (www.oceanik.com www.theattributesolution.com …)
We’ve recently had a complex issue. Let’s say these two products have a common dependency (newtonsoft.json in our case). Now let’s say both products are installed on a single farm and that for some reason you have to uninstall one of them.
When SharePoint will retract the wsp, it will retract all dll’s that were included within it. Including the common dependency the other product still needs.</description></item><item><title>SharePoint apps (add-ins) JavaScript disappeared</title><link>https://baywet.github.io/sharepoint-apps-add-ins-javasc/</link><pubDate>Tue, 09 Jun 2015 04:09:37 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/sharepoint-apps-add-ins-javasc/</guid><description>At Negotium we recently came across a weird problem.
Let’s assume you previously built a Provider hosted app for SharePoint.
Now let’s assume you updated to the latest version of the SDK (April/May update)
Finally let’s assume your tenant has been updated recently (v16.0.4121.1212 or above)
It’s likely that you are loading SP.*.js files and MicrosoftAjax.js the way it used to be recommended by Microsoft per say: &amp;lt;HostWebUrl&amp;gt;/_layouts/15/jsfile.js or &amp;lt;AppWebUrl&amp;gt;/_layouts/15/jsfile.js.</description></item><item><title>Office developers tools november 2014 update</title><link>https://baywet.github.io/office-developers-tools-novemb/</link><pubDate>Fri, 28 Nov 2014 01:56:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/office-developers-tools-novemb/</guid><description>If you work in SharePoint development you probably already have noticed that the tools are getting a new update.
With previous versions Microsoft.SharePoint.Client.Search and Microsoft.SharePoint.Client.Search.Applications dll’s were not included (it most likely has been forgotten)
You then had two solutions:
Ensure that all developers had SharePoint binaries installed on their machines Embed a copy of the dll taken from a SharePoint machine Both solutions were not very practical.</description></item><item><title>Have all the tools of a first class startup's in 10 min</title><link>https://baywet.github.io/have-all-the-tools-of-a-first/</link><pubDate>Thu, 03 Jul 2014 04:00:39 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/have-all-the-tools-of-a-first/</guid><description>Through my career I had the chance to be involved in several startups or small businesses trying to create a product or digital service. However a question arises very quickly:
How to have effective working tools while minimizing the financial impact?
And by impact financial I also mean the time spent to implement, because it is time that it not spent on its core business, or more generally to create added value.</description></item></channel></rss>