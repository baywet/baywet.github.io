<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev on Baywet's blog</title><link>https://baywet.github.io/tags/dev/</link><description>Recent content in Dev on Baywet's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>vbiret+blog@outlook.com (Vincent Biret)</managingEditor><webMaster>vbiret+blog@outlook.com (Vincent Biret)</webMaster><lastBuildDate>Mon, 19 Feb 2024 15:51:13 -0500</lastBuildDate><atom:link href="https://baywet.github.io/tags/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Speaking at SharePoint Saturday Toronto 2018</title><link>https://baywet.github.io/speaking-at-sharepoint-saturda-2018-11-20-09-00-00/</link><pubDate>Tue, 20 Nov 2018 09:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/speaking-at-sharepoint-saturda-2018-11-20-09-00-00/</guid><description>This year again I have the opportunity to speak at the SPS Toronto.
I’ll give a speech about “Migrate your custom components to the SharePoint Framework”.
Together we will see how you can transition from either the server-side object model or the add-ins development fashions to the modern SharePoint Framework approach. This session is mostly meant for developers and technical architects who are curious about getting started on the new model and that might have legacy applications.</description></item><item><title>Guest on the Microsoft Graph Community call (June): The Online Meeting Solution</title><link>https://baywet.github.io/guest-on-the-microsoft-graph-c/</link><pubDate>Sat, 04 Aug 2018 08:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/guest-on-the-microsoft-graph-c/</guid><description>I must admit I’ve not been on page lately for the blog posts. However, I had the privilege (among other great speakers) to present during the Microsoft Graph Community call for the month of June.
Microsoft Graph Community calls are online webinar organized by the Microsoft Graph Team. The Team usually presents announcements and then allows time for community speakers to presents discoveries, real life solutions and lessons learnt with the Microsoft Graph.</description></item><item><title>Guest on the Microsoft 365 Dev Podcast: Microsoft Graph Open Extensions and Calendering</title><link>https://baywet.github.io/guest-on-the-microsoft-365-dev/</link><pubDate>Thu, 02 Aug 2018 08:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/guest-on-the-microsoft-365-dev/</guid><description>Last week I had the honor to be a guest on the Microsoft 365 Dev Podcast hosted by Jeremy Thake and Paul Schaeflein.
It was the second time I was invited on a podcast (the first one being in French about devops), this is a fun exercise where the content is delivered as a discussion between the hosts and the guests.
During this episode we discussed about two main topics:</description></item><item><title>Internet Explorer compatibility mode is changing on SharePoint Online</title><link>https://baywet.github.io/internet-explorer-compatibilit/</link><pubDate>Mon, 16 Apr 2018 08:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/internet-explorer-compatibilit/</guid><description>The history being this situation…. Internet Explorer has been a corporate browser for two decades now. And many of us remember the dark ages of web development when we needed to have “IE compatible code” and “web compatible code”.
As many companies invested deeply in the browser building portals that worked with specific versions, Microsoft provided a decade ago a compatibility mode, allowing the browser to “behave” like a former version of itself and stay compatible with websites that had not been updated.</description></item><item><title>Using PnP PowerShell on Visual Studio Team Services (VSTS) Hosted Agent</title><link>https://baywet.github.io/using-pnp-powershell-on-visual/</link><pubDate>Mon, 09 Oct 2017 06:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/using-pnp-powershell-on-visual/</guid><description>Visual Studio Team Services (VSTS) provides great Continuous Integration (CI) and Continuous Deployment (CD) functionalities you can leverage to implement DevOps pipelines and automation with your custom developments.
If your custom solutions rely on PnP PowerShell during their build and/or deployment processes, you will need PnP PowerShell to be installed on the agent. Unfortunately the Hosted Agents do not have PnP PowerShell installed by default. Note: that documentation only applies to the Hosted and Hosted 2017 agents, the Linux Hosted Agent is not supported at the moment</description></item><item><title>Determine whether or not a SharePoint library is running with the new experience</title><link>https://baywet.github.io/determine-whether-or-not-a-sha/</link><pubDate>Tue, 14 Jun 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/determine-whether-or-not-a-sha/</guid><description>Microsoft just released the new experience for SharePoint libraries and I know a lot of you built custom look and feel and/or components on top of the library ui. (I’m thinking in particular about ScriptLink actions)
You might be in a situation where the code you need to run will be different depending on the experience being used.
After a little bit of research, here is an example of solution.</description></item><item><title>Building SharePoint 2016 WSP/FTC projects</title><link>https://baywet.github.io/building-sharepoint-2016-wspft/</link><pubDate>Mon, 11 Apr 2016 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/building-sharepoint-2016-wspft/</guid><description>WIth the release of SharePoint 2016 and the new MinRole feature, a lot of you would like to test migration of their custom solutions (Full Trust Code)
In order to do so, you need a 2016 dev machine (vs 2015 up to date with the latest version of the office sdk) and to install on top of that the office sdk preview 2.
https://www.microsoft.com/en-us/download/details.aspx?id=51683&amp;amp;WT.mc_id=rss_alldownloads_all&amp;amp;utm_source=twitterfeed&amp;amp;utm_medium=twitter
Then you only need to update references and targeted versions.</description></item><item><title>unable to find version '3.1.2' of package 'appforsharepointonlinewebtoolkit'</title><link>https://baywet.github.io/unable-to-find-version-312-of/</link><pubDate>Fri, 04 Sep 2015 14:00:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/unable-to-find-version-312-of/</guid><description>With office development tools for visual studio 2015 (and probably with august 2015 update for vs 2013 too, but I haven’t tried it), you may run into the following error:
unable to find version &amp;lsquo;3.1.2&amp;rsquo; of package &amp;lsquo;appforsharepointonlinewebtoolkit&amp;rsquo;
And so while doing an “update-package” in nuget console or if you have a restore packages step in your build process. (mandatory if like me you don’t include the packages folder into source control).</description></item><item><title>Have all the tools of a first class startup's in 10 min</title><link>https://baywet.github.io/have-all-the-tools-of-a-first/</link><pubDate>Thu, 03 Jul 2014 04:00:39 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/have-all-the-tools-of-a-first/</guid><description>Through my career I had the chance to be involved in several startups or small businesses trying to create a product or digital service. However a question arises very quickly:
How to have effective working tools while minimizing the financial impact?
And by impact financial I also mean the time spent to implement, because it is time that it not spent on its core business, or more generally to create added value.</description></item><item><title>Migrating Team Foundation Server 2010 to Visual Studio Online: difference of process model</title><link>https://baywet.github.io/migrating-team-foundation-serv/</link><pubDate>Mon, 30 Jun 2014 03:54:24 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/migrating-team-foundation-serv/</guid><description>Context In my company (www.negotium.com ) we are trying to achieve a significant migration for us people of development: TFS 2010 to visual studio online (ex tfs online).
This will bring many new opportunities and tools to our way of developing and it will allow our IT Department to decommission a (several in fact) machine. I&amp;rsquo;m preparing a more complete article on the benefits of the solution online from the online edition.</description></item><item><title>Availability of office 365 Samples and SDK on Github</title><link>https://baywet.github.io/availability-of-office-365-sam/</link><pubDate>Fri, 27 Jun 2014 16:53:59 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/availability-of-office-365-sam/</guid><description>For those who have not seen it yet Microsoft teams who work on Office 365 have created a hub on GitHub.
https://github.com/officedev
What are you going to find there?
Examples of code made by Microsoft and the community Demonstrations presented during the sessions from Microsoft and the community Part of the &amp;lsquo;documents&amp;rsquo; sources for the MSDN documentation SDK for &amp;rsquo;third&amp;rsquo; platforms (IOS, android&amp;hellip;) … The message behind that is Microsoft is investing in the community and wants to create a single place where developers (from any platform) can meet to participate in the projects together and share content.</description></item><item><title>Anonymous access for SharePoint autohosted apps</title><link>https://baywet.github.io/anonymous-access-for-sharepoin/</link><pubDate>Wed, 12 Mar 2014 17:03:38 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/anonymous-access-for-sharepoin/</guid><description>These days I’ve been working on an auto hosted app for SharePoint (office 365 actually).
I had to grant an anonymous access to one of the pages without requiring clients to give anonymous access to their SharePoint site. But I still needed to read a few properties from the App Web web site (the SPWeb provisioned by SharePoint when installing an app)
I had to play around a lot but I finally found the solution:</description></item><item><title>March Update of Visual Studio tools for Office</title><link>https://baywet.github.io/march-update-of-visual-studio/</link><pubDate>Thu, 06 Mar 2014 03:20:11 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/march-update-of-visual-studio/</guid><description>Microsoft recently publishing an update for Office development tools.
This update integrates SP1’s benefits. It also allows you to develop app for PowerPoint and Access, enhances/add creation/configuration wizards for projects elements and includes more data sources types.
You can find the detailed description of the update here https://msdn.microsoft.com/en-us/office/dn610877.aspx
It’s very simple to update your installation, open Visual Studio, tools, Extensions and updates.
Have fun coding!</description></item><item><title>Managing Resources, how to make your SharePoint solutions “globally deployed”</title><link>https://baywet.github.io/managing-resources-how-to-make/</link><pubDate>Thu, 23 Jan 2014 03:39:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/managing-resources-how-to-make/</guid><description>Introduction I wanted to publish this article months ago, back to the time I found this solution. But I did not mostly because of a lack of free time. Sebastien LEVERT, a top SharePoint developer and a member of Montreal’s SharePoint community, recently published a post about the same subject. Read it (sorry it’s in French), I’ll write my post so it is complementary. https://www.pimpmysharepoint.com/2014/01/09/deployer-des-fichiers-de-ressources-simplement/
Reminders To quickly summarize, when you develop SharePoint solutions and you want to support multiple languages (localize it) you need to use .</description></item><item><title>Boost your SharePoint solutions with distributed cache!–Part 2–Explanations tips and warnings</title><link>https://baywet.github.io/boost-your-sharepoint-solution-2013-12-15-12-06-00/</link><pubDate>Sun, 15 Dec 2013 12:06:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/boost-your-sharepoint-solution-2013-12-15-12-06-00/</guid><description>Explanations, tips, tricks and warnings Explanations This cache cluster is in facts made of appfabric hosts (caching services). One of the advantages is that hosts not members of the cluster but clients of it keep a local copy of objects. And this copy is automatically maintained up to date. The result is you do not need to implement a lazy loading pattern to avoid back and forth on the network.</description></item><item><title>SharePoint Auto hosted app and ASP.NET MVC</title><link>https://baywet.github.io/sharepoint-auto-hosted-app-and/</link><pubDate>Wed, 13 Nov 2013 04:16:32 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/sharepoint-auto-hosted-app-and/</guid><description>Code apps they said, it will be easier they said…
Visual Studio 2013 comes with a new project model : SharePoint autohosted app ASP.NET MVC (Cool!)
I’m fond of SharePoint, I like MVC, why not mixing them?
Short reminder, SharePoint autohosted apps are only available for Office 365. Technically Office 365 will create an Azure website on demand when app is deployed. The potential cost overhead will be billed directly to the tenant owner.</description></item><item><title>Entity Framework and dataContext reference for a web application</title><link>https://baywet.github.io/entity-framework-and-dataconte/</link><pubDate>Thu, 07 Nov 2013 03:40:00 +0000</pubDate><author>vbiret+blog@outlook.com (Vincent Biret)</author><guid>https://baywet.github.io/entity-framework-and-dataconte/</guid><description>When using the entity framework with a data context we often have this problematic:
What’s the best between performance and simplicity of usage or scalability?
(no? you do not ask yourself that kind of existential question?)
Here is a little explanation :
Static instance
In this first case you wrote a static reference to the context. Sometimes you also add some lazy loading and/or disposal management in global.asax (application end event)</description></item></channel></rss>